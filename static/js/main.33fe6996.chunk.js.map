{"version":3,"sources":["../node_modules/web3-eth-accounts/src sync","Store.js","ListedCompanyCard.js","ListedCompaniesGrid.js","Home.js","utils/getWeb3.js","NavDrawer.js","NavBar.js","User.js","About.js","serviceWorker.js","index.js","App.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","Store","React","createContext","initialState","web3","network","account","contract","isAdmin","sideBarOpen","listedCompanies","ExchangeToken","name","symbol","reducer","state","action","type","payload","key","value","StoreProvider","props","useReducer","dispatch","Provider","children","useStyles","makeStyles","card","minWidth","bullet","display","margin","transform","title","fontSize","pos","marginBottom","ListedCompanyCard","classes","Card","className","CardContent","Typography","variant","component","companyDescr","color","address","CardActions","theme","root","flexGrow","paper","height","width","ListedCompaniesGrid","useContext","Fragment","Grid","container","direction","justify","alignItems","spacing","Object","map","index","item","padding","Home","useEffect","a","methods","numberOfListedCompanies","call","from","nCompanies","i","cAddress","companyContract","eth","Contract","IPrivateCompany","abi","companyName","companySymbol","fetchCompanies","Paper","getWeb3","window","ethereum","autoRefreshOnNetworkChange","Web3","enable","console","log","provider","providers","HttpProvider","list","menuButton","marginRight","TemporaryDrawer","toggleDrawer","side","open","event","IconButton","edge","aria-label","onClick","Drawer","onClose","role","onKeyDown","List","ListItem","button","Link","to","ListItemIcon","ListItemText","primary","Divider","background","NavBar","connectWeb3","getAccounts","accounts","net","getId","networkId","deployedProxy","PrivateExchangeProxy","networks","instance","PrivateExchangeLogic","alert","JSON","stringify","AppBar","position","Toolbar","Switch","checked","disabled","onChange","noWrap","flexWrap","textField","marginLeft","dense","marginTop","menu","User","useState","user","setUser","c","isOwner","_isAdmin","fetchIsLogicAdmin","openMode","setOpenMode","substring","price","newCompany","setNewCompany","handleChange","target","noValidate","autoComplete","TextField","select","label","SelectProps","MenuProps","kvp","MenuItem","Button","size","switchOpenMode","send","f","InputLabelProps","shrink","createCompanyAndList","About","contractAddress","setAddress","contractOwner","setOwner","fetchContractDetails","options","owner","cOwner","Boolean","location","hostname","match","ReactDOM","render","CssBaseline","Container","path","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.33fe6996.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 383;","import React from \"react\";\n\nexport const Store = React.createContext();\n\nconst initialState = {\n  web3: null,\n  network: null,\n  account: null,\n  contract: null,\n\n  isAdmin: false,\n  sideBarOpen: false,\n  listedCompanies: { ExchangeToken: { name: \"COMPANY-TEST\", symbol: \"COYT\" } }\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"SET_WEB3\":\n      return { ...state, web3: action.payload };\n    case \"SET_NETWORK\":\n      return { ...state, network: action.payload };\n    case \"SET_ACCOUNT\":\n      return { ...state, account: action.payload };\n    case \"SET_CONTRACT\":\n      return { ...state, contract: action.payload };\n    case \"SIDE_DRAWER\":\n      return { ...state, sideBarOpen: action.payload };\n    case \"ADD_LISTEDCOMPANY\":\n      return {\n        ...state,\n        listedCompanies: {\n          ...state.listedCompanies,\n          [action.payload.key]: action.payload.value\n        }\n      };\n    default:\n      return state;\n  }\n}\n\nexport function StoreProvider(props) {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n  const value = { state, dispatch };\n  return <Store.Provider value={value}>{props.children}</Store.Provider>;\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles({\n  card: {\n    minWidth: 275\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\"\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 12\n  }\n});\n\nexport default function ListedCompanyCard(props) {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.card}>\n      <CardContent>\n        <Typography variant=\"h5\" component=\"h2\">\n          {props.companyDescr.symbol}\n        </Typography>\n        <Typography className={classes.pos} color=\"textSecondary\">\n          {props.companyDescr.name}\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n          {props.companyDescr.address}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        {/* <Button size=\"small\">Learn More</Button> */}\n      </CardActions>\n    </Card>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ListedCompanyCard from \"./ListedCompanyCard\";\n\nimport { Store } from \"./Store\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    height: 140,\n    width: 100\n  }\n}));\n\nexport default function ListedCompaniesGrid() {\n  const classes = useStyles();\n  const { state } = useContext(Store);\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        className={classes.root}\n        direction=\"row\"\n        justify=\"flex-start\"\n        alignItems=\"flex-start\"\n        spacing={2}\n      >\n        {Object.keys(state.listedCompanies).map((value, index) => (\n          <Grid key={index} item>\n            <ListedCompanyCard\n              className={classes.paper}\n              companyDescr={state.listedCompanies[value]}\n            />\n          </Grid>\n        ))}\n      </Grid>\n    </React.Fragment>\n  );\n}\n","import React, { useContext, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IPrivateCompany from \"./contracts/IPrivateCompany.json\";\n\nimport { Store } from \"./Store\";\nimport ListedCompaniesGrid from \"./ListedCompaniesGrid\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3, 2)\n  }\n}));\nexport default function Home() {\n  const classes = useStyles();\n  const { state, dispatch } = useContext(Store);\n\n  useEffect(() => {\n    async function fetchCompanies() {\n      if (state.contract) {\n        const nCompanies = await state.contract.methods\n          .numberOfListedCompanies()\n          .call({ from: state.account });\n        for (var i = 0; i < nCompanies; i++) {\n          const cAddress = await state.contract.methods\n            .listedCompanies(i)\n            .call({ from: state.account });\n          if (state.listedCompanies[cAddress]) {\n            continue;\n          } else {\n            const companyContract = new state.web3.eth.Contract(\n              IPrivateCompany.abi,\n              cAddress\n            );\n            const companyName = await companyContract.methods\n              .name()\n              .call({ from: state.account });\n            const companySymbol = await companyContract.methods\n              .symbol()\n              .call({ from: state.account });\n            dispatch({\n              type: \"ADD_LISTEDCOMPANY\",\n              payload: {\n                key: cAddress,\n                value: {\n                  name: companyName,\n                  symbol: companySymbol,\n                  contract: companyContract\n                }\n              }\n            });\n          }\n        }\n      }\n    }\n    fetchCompanies();\n  });\n  return (\n    <React.Fragment>\n      <Paper className={classes.root}>\n        <Typography variant=\"h6\">Listed Companies</Typography>\n        <ListedCompaniesGrid />\n      </Paper>\n    </React.Fragment>\n  );\n}\n","import Web3 from \"web3\";\n\nconst getWeb3 = async () => {\n  // Wait for loading completion to avoid race conditions with web3 injection timing.\n  // Modern dapp browsers...\n  if (window.ethereum) {\n    window.ethereum.autoRefreshOnNetworkChange = false;\n    const web3 = new Web3(window.ethereum);\n    // Request account access if needed\n    await window.ethereum.enable();\n    // Acccounts now exposed\n    return web3;\n  }\n  // Legacy dapp browsers...\n  else if (window.web3) {\n    // Use Mist/MetaMask's provider.\n    const web3 = window.web3;\n    console.log(\"Injected web3 detected.\");\n    return web3;\n  }\n  // Fallback to localhost; use dev console port by default...\n  else {\n    const provider = new Web3.providers.HttpProvider(\"http://127.0.0.1:8545\");\n    const web3 = new Web3(provider);\n    console.log(\"No web3 instance injected, using Local web3.\");\n    return web3;\n  }\n};\n\nexport default getWeb3;\n","import React, { useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport AppsIcon from \"@material-ui/icons/Apps\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport PersonIcon from \"@material-ui/icons/Person\";\n\nimport { Link } from \"react-router-dom\";\nimport { Store } from \"./Store\";\n\nconst useStyles = makeStyles(theme => ({\n  list: {\n    width: 250\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  }\n}));\n\nexport default function TemporaryDrawer() {\n  const classes = useStyles();\n  const { state, dispatch } = useContext(Store);\n\n  const toggleDrawer = (side, open) => event => {\n    if (\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n    dispatch({\n      type: \"SIDE_DRAWER\",\n      payload: open\n    });\n  };\n  const switchOpenMode = async () => {\n    if (state.contract !== null) {\n      await state.contract.methods.switchOpenMode(true).send();\n    }\n  };\n\n  const sideList = side => (\n    <div\n      className={classes.list}\n      role=\"presentation\"\n      onClick={toggleDrawer(side, false)}\n      onKeyDown={toggleDrawer(side, false)}\n    >\n      <List>\n        <ListItem button key={\"Home\"} component={Link} to=\"/\">\n          <ListItemIcon>\n            <AppsIcon />\n          </ListItemIcon>\n          <ListItemText primary={\"Home\"} />\n        </ListItem>\n\n        <ListItem button key={\"About\"} component={Link} to=\"About\">\n          <ListItemIcon>\n            <InfoIcon />\n          </ListItemIcon>\n          <ListItemText primary={\"About\"} />\n        </ListItem>\n\n        <ListItem button key={\"User\"} component={Link} to=\"User\">\n          <ListItemIcon>\n            <PersonIcon />\n          </ListItemIcon>\n          <ListItemText primary={\"User\"} />\n        </ListItem>\n      </List>\n      <Divider />\n    </div>\n  );\n\n  return (\n    <div>\n      <IconButton\n        edge=\"start\"\n        className={classes.menuButton}\n        color=\"inherit\"\n        aria-label=\"menu\"\n        onClick={toggleDrawer(\"left\", true)}\n      >\n        <MenuIcon />\n      </IconButton>\n      <Drawer open={state.sideBarOpen} onClose={toggleDrawer(\"left\", false)}>\n        {sideList(\"left\")}\n      </Drawer>\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Switch from \"@material-ui/core/Switch\";\nimport getWeb3 from \"./utils/getWeb3\";\nimport TemporaryDrawer from \"./NavDrawer\";\nimport PrivateExchangeProxy from \"./contracts/PrivateExchangeProxy.json\";\nimport PrivateExchangeLogic from \"./contracts/PrivateExchangeLogic.json\";\n\nimport { Store } from \"./Store\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    background: \"linear-gradient(160deg, #0093E9 0%, #80D0C7 100%)\"\n  },\n  title: {\n    flexGrow: 1\n  }\n}));\n\nexport default function NavBar() {\n  const classes = useStyles();\n  const { state, dispatch } = useContext(Store);\n  const connectWeb3 = async () => {\n    try {\n      //store web3 for contract interaction in whole app\n      const web3 = await getWeb3();\n      dispatch({\n        type: \"SET_WEB3\",\n        payload: web3\n      });\n\n      //store account for contract interaction in whole app\n      const accounts = await web3.eth.getAccounts();\n      dispatch({\n        type: \"SET_ACCOUNT\",\n        payload: accounts[0]\n      });\n\n      //store networkId for contract interaction in whole app\n      const networkId = await web3.eth.net.getId();\n      dispatch({\n        type: \"SET_NETWORK\",\n        payload: networkId\n      });\n      const deployedProxy = PrivateExchangeProxy.networks[networkId];\n      const instance = new web3.eth.Contract(\n        PrivateExchangeLogic.abi,\n        deployedProxy.address\n      );\n\n      //store contract\n      dispatch({\n        type: \"SET_CONTRACT\",\n        payload: instance\n      });\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\"error:\" + JSON.stringify(error));\n    }\n  };\n  return (\n    <React.Fragment>\n      <AppBar position=\"static\" className={classes.root}>\n        <Toolbar>\n          <TemporaryDrawer />\n          <Typography variant=\"h6\" className={classes.title}>\n            Entanglement Exchange\n          </Typography>\n          <Switch\n            checked={state.account !== null}\n            disabled={state.account !== null}\n            onChange={connectWeb3}\n            aria-label=\"Connect\"\n          />{\" \"}\n          <Typography variant=\"body2\" noWrap>\n            {state.account ? state.account : \"Connect Web3\"}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </React.Fragment>\n  );\n}\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Button from \"@material-ui/core/Button\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nimport { Store } from \"./Store\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(2, 2, 2, 2)\n  },\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200\n  },\n  dense: {\n    marginTop: 19\n  },\n  menu: {\n    width: 200\n  },\n  button: {\n    margin: theme.spacing(1)\n  }\n}));\n\nexport default function User() {\n  const classes = useStyles();\n  const { state, dispatch } = useContext(Store);\n  const [user, setUser] = useState({ isAdmin: null });\n  useEffect(() => {\n    if (user.isAdmin === null) {\n      async function fetchIsLogicAdmin() {\n        if (state.contract) {\n          const c = state.contract;\n          const _isAdmin = await c.methods\n            .isOwner()\n            .call({ from: state.account });\n          setUser({ ...user, isAdmin: _isAdmin });\n        }\n      }\n      fetchIsLogicAdmin();\n    }\n  });\n  const AdminCapabilities = () => {\n    const [openMode, setOpenMode] = useState(false);\n    const [newCompany, setNewCompany] = useState({\n      name: state.account.substring(35) + \"Company\",\n      symbol: state.account.substring(35) + \"COY\",\n      price: 1\n    });\n    const switchOpenMode = event => {\n      setOpenMode(event.target.value);\n    };\n    const handleChange = name => event => {\n      setNewCompany({ ...newCompany, [name]: event.target.value });\n    };\n    const switchOpenModeTransaction = () => {\n      const f = async () => {\n        if (state.contract) {\n          const c = state.contract;\n          await c.methods.switchOpenMode(openMode).send({\n            from: state.account\n          });\n        }\n      };\n      f();\n    };\n    const createNewCompanyAndListTransaction = () => {\n      const f = async () => {\n        if (state.contract) {\n          const c = state.contract;\n          await c.methods\n            .createCompanyAndList(\n              newCompany.name,\n              newCompany.symbol,\n              newCompany.price\n            )\n            .send({\n              from: state.account\n            });\n        }\n      };\n      f();\n    };\n    return (\n      <React.Fragment>\n        <Typography variant=\"h6\">\n          You are the administrator of this exchange.\n        </Typography>\n        <Divider />\n        <br />\n        <Typography variant=\"h6\">Open Exchange?</Typography>\n        <form className={classes.container} noValidate autoComplete=\"off\">\n          <TextField\n            id=\"ExchangeOpenMode\"\n            select\n            label=\"Select\"\n            className={classes.textField}\n            value={openMode}\n            SelectProps={{\n              MenuProps: {\n                className: classes.menu\n              }\n            }}\n            margin=\"normal\"\n            variant=\"outlined\"\n            onChange={switchOpenMode}\n          >\n            {[{ key: \"false\", value: false }, { key: \"true\", value: true }].map(\n              kvp => (\n                <MenuItem key={kvp.key} value={kvp.value}>\n                  {kvp.key}\n                </MenuItem>\n              )\n            )}\n          </TextField>\n        </form>\n        <Button\n          size=\"medium\"\n          color=\"primary\"\n          variant=\"contained\"\n          className={classes.button}\n          onClick={switchOpenModeTransaction}\n        >\n          send\n        </Button>\n        <Divider />\n        <Typography variant=\"h6\">\n          Create and List New Company On Exchange\n        </Typography>\n        <form className={classes.container} noValidate autoComplete=\"off\">\n          <TextField\n            id=\"CompanyName\"\n            label=\"Company Name\"\n            className={classes.textField}\n            value={newCompany.name}\n            onChange={handleChange(\"name\")}\n            margin=\"normal\"\n            variant=\"outlined\"\n          />\n          <TextField\n            id=\"CompanySymbol\"\n            label=\"Company Symbol\"\n            className={classes.textField}\n            value={newCompany.symbol}\n            onChange={handleChange(\"symbol\")}\n            margin=\"normal\"\n            variant=\"outlined\"\n          />\n          <TextField\n            id=\"Price per Share (EE$)\"\n            label=\"Price\"\n            value={newCompany.price}\n            onChange={handleChange(\"price\")}\n            type=\"number\"\n            className={classes.textField}\n            InputLabelProps={{\n              shrink: true\n            }}\n            margin=\"normal\"\n            variant=\"outlined\"\n          />\n        </form>\n        <Button\n          color=\"primary\"\n          size=\"medium\"\n          variant=\"contained\"\n          className={classes.button}\n          onClick={createNewCompanyAndListTransaction}\n        >\n          send\n        </Button>\n        <Divider />\n      </React.Fragment>\n    );\n  };\n  return (\n    <React.Fragment>\n      <Paper className={classes.root}>\n        <Typography variant=\"h6\" noWrap>\n          User Address: {state.account}\n        </Typography>\n        <Divider />\n        <br />\n        {user.isAdmin && <AdminCapabilities />}\n      </Paper>\n    </React.Fragment>\n  );\n}\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Store } from \"./Store\";\nimport PrivateExchangeProxy from \"./contracts/PrivateExchangeProxy.json\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3, 2),\n    width: \"auto\"\n  }\n}));\n\nexport default function About() {\n  const classes = useStyles();\n  const { state } = useContext(Store);\n  const [contractAddress, setAddress] = useState(\"\");\n  const [contractOwner, setOwner] = useState(\"\");\n  const fetchContractDetails = async () => {\n    if (state.contract) {\n      const c = state.contract;\n      setAddress(c.options.address);\n      const cOwner = await c.methods.owner().call({ from: state.account });\n      setOwner(cOwner);\n    }\n  };\n  useEffect(() => {\n    fetchContractDetails();\n  });\n  return (\n    <React.Fragment>\n      <Paper className={classes.root}>\n        <Typography variant=\"h6\" noWrap>\n          Exchange Contract Address: {contractAddress}\n        </Typography>\n        <Typography variant=\"h6\" noWrap>\n          Exchange Owner: {contractOwner}\n        </Typography>\n      </Paper>\n    </React.Fragment>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport Home from \"./Home\";\nimport { StoreProvider } from \"./Store\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { CssBaseline, Container } from \"@material-ui/core\";\nimport NavBar from \"./NavBar\";\nimport User from \"./User\";\nimport About from \"./About\";\n\nexport default function App() {\n  return (\n    <React.Fragment>\n      <StoreProvider>\n        <CssBaseline />\n        <Container width=\"75%\">\n          <Router>\n            <NavBar />\n            {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n            <Switch>\n              <Route path=\"/About\">\n                <About />\n              </Route>\n              <Route path=\"/User\">\n                <User />\n              </Route>\n              <Route path=\"/\">\n                <Home />\n              </Route>\n            </Switch>\n          </Router>\n        </Container>\n      </StoreProvider>\n    </React.Fragment>\n  );\n}\n"],"sourceRoot":""}