{"version":3,"sources":["../node_modules/web3-eth-accounts/src sync","Store.js","ListedCompanyCard.js","ListedCompaniesGrid.js","Home.js","utils/getWeb3.js","NavDrawer.js","NavBar.js","User.js","About.js","App.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","Store","React","createContext","initialState","web3","network","account","contract","exchangeStatus","exchangeToken","isAdmin","sideBarOpen","listedCompanies","reducer","state","action","type","payload","key","value","StoreProvider","props","useReducer","dispatch","Provider","children","useStyles","makeStyles","theme","card","minWidth","background","palette","secondary","dark","bullet","display","margin","transform","title","fontSize","pos","marginBottom","ListedCompanyCard","classes","Card","className","CardContent","Typography","variant","component","companyDescr","symbol","color","name","address","CardActions","root","flexGrow","paper","height","width","ListedCompaniesGrid","useContext","Fragment","Grid","container","direction","justify","alignItems","spacing","Object","map","index","item","padding","Home","useEffect","a","methods","numberOfListedCompanies","call","from","nCompanies","i","cAddress","companyContract","eth","Contract","IPrivateCompany","abi","companyName","companySymbol","fetchCompanies","Paper","getWeb3","window","ethereum","autoRefreshOnNetworkChange","Web3","enable","console","log","provider","providers","HttpProvider","list","menuButton","marginRight","TemporaryDrawer","toggleDrawer","side","open","event","IconButton","edge","aria-label","onClick","Drawer","onClose","role","onKeyDown","List","ListItem","button","Link","to","ListItemIcon","ListItemText","primary","Divider","main","NavBar","connectWeb3","getAccounts","accounts","net","getId","networkId","deployedProxy","PrivateExchangeProxy","networks","instance","PrivateExchangeLogic","alert","JSON","stringify","AppBar","position","Toolbar","Switch","checked","disabled","onChange","noWrap","textField","marginLeft","dense","marginTop","menu","User","useState","balance","ownedCompanies","user","setUser","isOpen","exchange","setExchange","fetchUserDetails","c","isOwner","_isAdmin","utils","exchangeTokenBalance","_balance","fromWei","numberOfOwnedCompanies","_ownedCompanies","fetchIsExchangeOpen","_isOpen","Box","openMode","setOpenMode","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","zeroMinWidth","TextField","select","label","SelectProps","MenuProps","target","kvp","MenuItem","Button","size","switchOpenMode","send","f","price","newCompany","setNewCompany","buyEE","setBuyEE","handleNewCompany","InputLabelProps","shrink","createCompanyAndList","buyExchangeToken","toWei","About","owner","status","setInfo","ex","exOwner","exStatus","options","fetchContractDetails","createMuiTheme","indigo","teal","responsiveFontSizes","Boolean","location","hostname","match","ReactDOM","render","ThemeProvider","CssBaseline","Container","maxWidth","path","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4213be62.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 394;","import React from \"react\";\n\nexport const Store = React.createContext();\n\nconst initialState = {\n  web3: null,\n  network: null,\n  account: null,\n  contract: null,\n  exchangeStatus: false,\n  exchangeToken: null,\n\n  isAdmin: false,\n  sideBarOpen: false,\n  listedCompanies: {}\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"SET_WEB3\":\n      return { ...state, web3: action.payload };\n    case \"SET_NETWORK\":\n      return { ...state, network: action.payload };\n    case \"SET_ACCOUNT\":\n      return { ...state, account: action.payload };\n    case \"SET_CONTRACT\":\n      return { ...state, contract: action.payload };\n    case \"SIDE_DRAWER\":\n      return { ...state, sideBarOpen: action.payload };\n    case \"SET_EXCHANGE_STATUS\":\n      return { ...state, exchangeStatus: action.payload };\n    case \"SET_EXCHANGE_TOKEN\":\n      return { ...state, exchangeToken: action.payload };\n    case \"ADD_LISTEDCOMPANY\":\n      return {\n        ...state,\n        listedCompanies: {\n          ...state.listedCompanies,\n          [action.payload.key]: action.payload.value\n        }\n      };\n    default:\n      return state;\n  }\n}\n\nexport function StoreProvider(props) {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n  const value = { state, dispatch };\n  return <Store.Provider value={value}>{props.children}</Store.Provider>;\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    minWidth: 275,\n    background: theme.palette.secondary.dark\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\"\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 12\n  }\n}));\n\nexport default function ListedCompanyCard(props) {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.card}>\n      <CardContent>\n        <Typography variant=\"h5\" component=\"h2\">\n          {props.companyDescr.symbol}\n        </Typography>\n        <Typography className={classes.pos} color=\"textSecondary\">\n          {props.companyDescr.name}\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n          {props.companyDescr.address}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        {/* <Button size=\"small\">Learn More</Button> */}\n      </CardActions>\n    </Card>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ListedCompanyCard from \"./ListedCompanyCard\";\n\nimport { Store } from \"./Store\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    height: 140,\n    width: 100\n  }\n}));\n\nexport default function ListedCompaniesGrid() {\n  const classes = useStyles();\n  const { state } = useContext(Store);\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        className={classes.root}\n        direction=\"row\"\n        justify=\"flex-start\"\n        alignItems=\"flex-start\"\n        spacing={2}\n      >\n        {Object.keys(state.listedCompanies).map((value, index) => (\n          <Grid key={index} item>\n            <ListedCompanyCard\n              className={classes.paper}\n              companyDescr={state.listedCompanies[value]}\n            />\n          </Grid>\n        ))}\n      </Grid>\n    </React.Fragment>\n  );\n}\n","import React, { useContext, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IPrivateCompany from \"./contracts/IPrivateCompany.json\";\n\nimport { Store } from \"./Store\";\nimport ListedCompaniesGrid from \"./ListedCompaniesGrid\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3, 2, 2, 2)\n  }\n}));\nexport default function Home() {\n  const classes = useStyles();\n  const { state, dispatch } = useContext(Store);\n\n  useEffect(() => {\n    async function fetchCompanies() {\n      if (state.contract) {\n        const nCompanies = await state.contract.methods\n          .numberOfListedCompanies()\n          .call({ from: state.account });\n        for (var i = 0; i < nCompanies; i++) {\n          const cAddress = await state.contract.methods\n            .listedCompanies(i)\n            .call({ from: state.account });\n          if (state.listedCompanies[cAddress]) {\n            continue;\n          } else {\n            const companyContract = new state.web3.eth.Contract(\n              IPrivateCompany.abi,\n              cAddress\n            );\n            const companyName = await companyContract.methods\n              .name()\n              .call({ from: state.account });\n            const companySymbol = await companyContract.methods\n              .symbol()\n              .call({ from: state.account });\n            dispatch({\n              type: \"ADD_LISTEDCOMPANY\",\n              payload: {\n                key: cAddress,\n                value: {\n                  name: companyName,\n                  symbol: companySymbol,\n                  contract: companyContract\n                }\n              }\n            });\n          }\n        }\n      }\n    }\n    fetchCompanies();\n  });\n  return (\n    <React.Fragment>\n      <Paper className={classes.root}>\n        <Typography variant=\"h6\">Listed Companies</Typography>\n        <ListedCompaniesGrid />\n      </Paper>\n    </React.Fragment>\n  );\n}\n","import Web3 from \"web3\";\n\nconst getWeb3 = async () => {\n  // Wait for loading completion to avoid race conditions with web3 injection timing.\n  // Modern dapp browsers...\n  if (window.ethereum) {\n    window.ethereum.autoRefreshOnNetworkChange = false;\n    const web3 = new Web3(window.ethereum);\n    // Request account access if needed\n    await window.ethereum.enable();\n    // Acccounts now exposed\n    return web3;\n  }\n  // Legacy dapp browsers...\n  else if (window.web3) {\n    // Use Mist/MetaMask's provider.\n    const web3 = window.web3;\n    console.log(\"Injected web3 detected.\");\n    return web3;\n  }\n  // Fallback to localhost; use dev console port by default...\n  else {\n    const provider = new Web3.providers.HttpProvider(\"http://127.0.0.1:8545\");\n    const web3 = new Web3(provider);\n    console.log(\"No web3 instance injected, using Local web3.\");\n    return web3;\n  }\n};\n\nexport default getWeb3;\n","import React, { useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport AppsIcon from \"@material-ui/icons/Apps\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport PersonIcon from \"@material-ui/icons/Person\";\n\nimport { Link } from \"react-router-dom\";\nimport { Store } from \"./Store\";\n\nconst useStyles = makeStyles(theme => ({\n  list: {\n    width: 250\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  }\n}));\n\nexport default function TemporaryDrawer() {\n  const classes = useStyles();\n  const { state, dispatch } = useContext(Store);\n\n  const toggleDrawer = (side, open) => event => {\n    if (\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n    dispatch({\n      type: \"SIDE_DRAWER\",\n      payload: open\n    });\n  };\n  const switchOpenMode = async () => {\n    if (state.contract !== null) {\n      await state.contract.methods.switchOpenMode(true).send();\n    }\n  };\n\n  const sideList = side => (\n    <div\n      className={classes.list}\n      role=\"presentation\"\n      onClick={toggleDrawer(side, false)}\n      onKeyDown={toggleDrawer(side, false)}\n    >\n      <List>\n        <ListItem button key={\"Home\"} component={Link} to=\"/\">\n          <ListItemIcon>\n            <AppsIcon />\n          </ListItemIcon>\n          <ListItemText primary={\"Home\"} />\n        </ListItem>\n\n        <ListItem button key={\"About\"} component={Link} to=\"About\">\n          <ListItemIcon>\n            <InfoIcon />\n          </ListItemIcon>\n          <ListItemText primary={\"About\"} />\n        </ListItem>\n\n        <ListItem button key={\"User\"} component={Link} to=\"User\">\n          <ListItemIcon>\n            <PersonIcon />\n          </ListItemIcon>\n          <ListItemText primary={\"User\"} />\n        </ListItem>\n      </List>\n      <Divider />\n    </div>\n  );\n\n  return (\n    <div>\n      <IconButton\n        edge=\"start\"\n        className={classes.menuButton}\n        color=\"inherit\"\n        aria-label=\"menu\"\n        onClick={toggleDrawer(\"left\", true)}\n      >\n        <MenuIcon />\n      </IconButton>\n      <Drawer open={state.sideBarOpen} onClose={toggleDrawer(\"left\", false)}>\n        {sideList(\"left\")}\n      </Drawer>\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Switch from \"@material-ui/core/Switch\";\nimport getWeb3 from \"./utils/getWeb3\";\nimport TemporaryDrawer from \"./NavDrawer\";\nimport PrivateExchangeProxy from \"./contracts/PrivateExchangeProxy.json\";\nimport PrivateExchangeLogic from \"./contracts/PrivateExchangeLogic.json\";\n\nimport { Store } from \"./Store\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    background: theme.palette.primary.main\n  },\n  title: {\n    flexGrow: 1\n  }\n}));\n\nexport default function NavBar() {\n  const classes = useStyles();\n  const { state, dispatch } = useContext(Store);\n  const connectWeb3 = async () => {\n    try {\n      //store web3 for contract interaction in whole app\n      const web3 = await getWeb3();\n      dispatch({\n        type: \"SET_WEB3\",\n        payload: web3\n      });\n\n      //store account for contract interaction in whole app\n      const accounts = await web3.eth.getAccounts();\n      dispatch({\n        type: \"SET_ACCOUNT\",\n        payload: accounts[0]\n      });\n\n      //store networkId for contract interaction in whole app\n      const networkId = await web3.eth.net.getId();\n      dispatch({\n        type: \"SET_NETWORK\",\n        payload: networkId\n      });\n      const deployedProxy = PrivateExchangeProxy.networks[networkId];\n      const instance = new web3.eth.Contract(\n        PrivateExchangeLogic.abi,\n        deployedProxy.address\n      );\n\n      //store contract\n      dispatch({\n        type: \"SET_CONTRACT\",\n        payload: instance\n      });\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\"error:\" + JSON.stringify(error));\n    }\n  };\n  return (\n    <React.Fragment>\n      <AppBar position=\"static\" className={classes.root}>\n        <Toolbar>\n          <TemporaryDrawer />\n          <Typography variant=\"h6\" className={classes.title}>\n            Entanglement Exchange\n          </Typography>\n          <Switch\n            color=\"primary\"\n            checked={state.account !== null}\n            disabled={state.account !== null}\n            onChange={connectWeb3}\n            aria-label=\"Connect\"\n          />\n          <Typography variant=\"body2\" noWrap>\n            {state.account ? state.account : \"Connect Web3\"}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </React.Fragment>\n  );\n}\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport Box from \"@material-ui/core/Box\";\nimport getWeb3 from \"./utils/getWeb3\";\n\nimport { Store } from \"./Store\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    padding: theme.spacing(1, 0, 0, 0)\n  },\n  container: {\n    padding: theme.spacing(2, 3, 2, 3)\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200\n  },\n  dense: {\n    marginTop: 19\n  },\n  menu: {\n    width: 200\n  },\n  button: {\n    margin: theme.spacing(1)\n  }\n}));\n\nexport default function User() {\n  const classes = useStyles();\n  const { state, dispatch } = useContext(Store);\n  const [user, setUser] = useState({\n    isAdmin: false,\n    balance: 0,\n    ownedCompanies: 0\n  });\n  const [exchange, setExchange] = useState({ isOpen: false });\n  useEffect(() => {\n    const fetchUserDetails = async () => {\n      const web3 = await getWeb3();\n      const c = state.contract;\n      const _isAdmin = await c.methods.isOwner().call({ from: state.account });\n      const _balance = web3.utils.fromWei(\n        await c.methods.exchangeTokenBalance().call({ from: state.account })\n      );\n      const _ownedCompanies = await c.methods\n        .numberOfOwnedCompanies()\n        .call({ from: state.account });\n      setUser({\n        ...user,\n        isAdmin: _isAdmin,\n        balance: _balance,\n        ownedCompanies: _ownedCompanies\n      });\n    };\n    const fetchIsExchangeOpen = async () => {\n      const c = state.contract;\n      const _isOpen = await c.methods.isOpen().call({ from: state.account });\n      setExchange({ ...exchange, isOpen: _isOpen });\n    };\n    if (state.contract && state.account) {\n      fetchUserDetails();\n      fetchIsExchangeOpen();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.contract, state.account]);\n\n  const AdminCapabilities = () => {\n    const [openMode, setOpenMode] = useState(false);\n    const switchOpenMode = event => {\n      setOpenMode(event.target.value);\n    };\n    const switchOpenModeTransaction = () => {\n      const f = async () => {\n        if (state.contract) {\n          const c = state.contract;\n          await c.methods.switchOpenMode(openMode).send({\n            from: state.account\n          });\n        }\n      };\n      f();\n    };\n    return (\n      <React.Fragment>\n        <ExpansionPanel>\n          <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"admin-capabilities\"\n            id=\"admin-capabilities\"\n          >\n            <Typography variant=\"h6\">\n              You are the administrator of this exchange.\n            </Typography>\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails>\n            <Box>\n              <Typography variant=\"h6\" noWrap>\n                Open Exchange?\n              </Typography>\n              <Grid container direction=\"row\" alignItems=\"center\" spacing={2}>\n                <Grid item zeroMinWidth>\n                  <TextField\n                    id=\"ExchangeOpenMode\"\n                    select\n                    label=\"Select\"\n                    className={classes.textField}\n                    value={openMode}\n                    SelectProps={{\n                      MenuProps: {\n                        className: classes.menu\n                      }\n                    }}\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    onChange={switchOpenMode}\n                  >\n                    {[\n                      { key: \"false\", value: false },\n                      { key: \"true\", value: true }\n                    ].map(kvp => (\n                      <MenuItem key={kvp.key} value={kvp.value}>\n                        {kvp.key}\n                      </MenuItem>\n                    ))}\n                  </TextField>\n                </Grid>\n                <Grid item zeroMinWidth>\n                  <Button\n                    size=\"medium\"\n                    color=\"primary\"\n                    variant=\"contained\"\n                    className={classes.button}\n                    onClick={switchOpenModeTransaction}\n                  >\n                    send\n                  </Button>\n                </Grid>\n              </Grid>\n            </Box>\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n      </React.Fragment>\n    );\n  };\n  const UserCapabilities = () => {\n    const [newCompany, setNewCompany] = useState({\n      name: \"\",\n      symbol: \"\",\n      price: 1\n    });\n    const [buyEE, setBuyEE] = useState(0);\n    const handleNewCompany = name => event => {\n      setNewCompany({ ...newCompany, [name]: event.target.value });\n    };\n    const handleBuyEE = name => event => {\n      setBuyEE(event.target.value);\n    };\n    const createNewCompanyAndListTransaction = () => {\n      const f = async () => {\n        if (state.contract) {\n          const c = state.contract;\n          await c.methods\n            .createCompanyAndList(\n              newCompany.name,\n              newCompany.symbol,\n              newCompany.price\n            )\n            .send({\n              from: state.account\n            });\n        }\n      };\n      f();\n    };\n    const buyExchangeTokenTransaction = () => {\n      const f = async () => {\n        if (state.contract) {\n          const c = state.contract;\n          const web3 = await getWeb3();\n          await c.methods.buyExchangeToken().send({\n            from: state.account,\n            value: web3.utils.toWei(buyEE)\n          });\n        }\n      };\n      f();\n    };\n    return (\n      <React.Fragment>\n        <Paper className={classes.container}>\n          <Typography variant=\"h5\" noWrap>\n            Account Details:\n          </Typography>\n          <Typography variant=\"h6\" noWrap>\n            Balance: {user.balance} EE$\n          </Typography>\n        </Paper>\n        <Paper className={classes.container}>\n          <Typography variant=\"h6\" noWrap>\n            Create Company and List on Exchange\n          </Typography>\n          <Grid container direction=\"row\" alignItems=\"center\" spacing={2}>\n            <Grid item zeroMinWidth>\n              <TextField\n                id=\"CompanyName\"\n                label=\"Company Name\"\n                className={classes.textField}\n                value={newCompany.name}\n                onChange={handleNewCompany(\"name\")}\n                margin=\"normal\"\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item zeroMinWidth>\n              <TextField\n                id=\"CompanySymbol\"\n                label=\"Company Symbol\"\n                className={classes.textField}\n                value={newCompany.symbol}\n                onChange={handleNewCompany(\"symbol\")}\n                margin=\"normal\"\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item zeroMinWidth>\n              <TextField\n                id=\"PricePerShare\"\n                label=\"Price per Share (EE$)\"\n                value={newCompany.price}\n                onChange={handleNewCompany(\"price\")}\n                type=\"number\"\n                className={classes.textField}\n                InputLabelProps={{\n                  shrink: true\n                }}\n                margin=\"normal\"\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item zeroMinWidth>\n              <Button\n                color=\"primary\"\n                size=\"large\"\n                variant=\"contained\"\n                className={classes.button}\n                onClick={createNewCompanyAndListTransaction}\n              >\n                send\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n\n        <Paper className={classes.container}>\n          <Typography variant=\"h6\" noWrap>\n            Buy Exchange Tokens (EE$)\n          </Typography>\n          <Grid container direction=\"row\" alignItems=\"center\" spacing={2}>\n            <Grid item zeroMinWidth>\n              <TextField\n                id=\"AmountofEE\"\n                label=\"AmountOfEE\"\n                value={buyEE}\n                onChange={handleBuyEE()}\n                type=\"number\"\n                className={classes.textField}\n                InputLabelProps={{\n                  shrink: true\n                }}\n                margin=\"normal\"\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item zeroMinWidth>\n              <Button\n                color=\"primary\"\n                size=\"large\"\n                variant=\"contained\"\n                className={classes.button}\n                onClick={buyExchangeTokenTransaction}\n              >\n                send\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n      </React.Fragment>\n    );\n  };\n  return (\n    <React.Fragment>\n      <Box className={classes.root}>\n        {state.contract && user.isAdmin && <AdminCapabilities />}\n        {state.contract && <UserCapabilities />}{\" \"}\n      </Box>\n    </React.Fragment>\n  );\n}\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Store } from \"./Store\";\nimport PrivateExchangeProxy from \"./contracts/PrivateExchangeProxy.json\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3, 2),\n    width: \"auto\"\n  }\n}));\n\nexport default function About() {\n  const classes = useStyles();\n  const { state } = useContext(Store);\n  const [exchange, setInfo] = useState({\n    address: null,\n    owner: null,\n    status: false\n  });\n  useEffect(() => {\n    console.log(\"EFFECT\");\n    const fetchContractDetails = async () => {\n      if (state.contract) {\n        const ex = state.contract;\n        const exOwner = await ex.methods.owner().call({ from: state.account });\n        const exStatus = await ex.methods\n          .isOpen()\n          .call({ from: state.account });\n        setInfo({\n          ...exchange,\n          address: ex.options.address,\n          owner: exOwner,\n          status: exStatus\n        });\n      }\n    };\n    fetchContractDetails();\n  }, [state.contract, state.account]);\n  return (\n    <React.Fragment>\n      <Paper className={classes.root}>\n        <Typography variant=\"h6\" noWrap>\n          Exchange Contract Address: {exchange.address}\n        </Typography>\n        <Typography variant=\"h6\" noWrap>\n          Exchange Owner: {exchange.owner}\n        </Typography>\n        <Typography variant=\"h6\" noWrap>\n          Exchange Status: {exchange.status ? \"Open\" : \"Closed\"}\n        </Typography>\n      </Paper>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport Home from \"./Home\";\nimport { StoreProvider } from \"./Store\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { CssBaseline, Container } from \"@material-ui/core\";\nimport NavBar from \"./NavBar\";\nimport User from \"./User\";\nimport About from \"./About\";\nimport {\n  createMuiTheme,\n  responsiveFontSizes,\n  ThemeProvider\n} from \"@material-ui/core/styles\";\nimport indigo from \"@material-ui/core/colors/indigo\";\nimport teal from \"@material-ui/core/colors/teal\";\n\nlet theme = createMuiTheme({\n  palette: {\n    primary: indigo,\n    secondary: teal,\n    type: \"dark\"\n  }\n});\ntheme = responsiveFontSizes(theme);\n\nexport default function App() {\n  return (\n    <React.Fragment>\n      <StoreProvider>\n        <ThemeProvider theme={theme}>\n          <CssBaseline />\n          <Container maxWidth=\"xl\">\n            <Router>\n              <NavBar />\n              {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n              <Switch>\n                <Route path=\"/About\">\n                  <About />\n                </Route>\n                <Route path=\"/User\">\n                  <User />\n                </Route>\n                <Route path=\"/\">\n                  <Home />\n                </Route>\n              </Switch>\n            </Router>\n          </Container>\n        </ThemeProvider>\n      </StoreProvider>\n    </React.Fragment>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}