{"version":3,"sources":["../node_modules/web3-eth-accounts/src sync","Store.js","ListedCompanyCard.js","ListedCompanyDial.js","ListedCompanyAddNew.js","Home.js","utils/getWeb3.js","NavDrawer.js","NavBar.js","UserCapabilities.js","UserAdmin.js","User.js","About.js","EventManager.js","App.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","Store","React","createContext","initialState","sideBarOpen","loading","ropstenENS","web3","network","account","contract","userIsAdmin","userEthBalance","userBalance","userStaked","userNumberCompanies","userOwnedCompanies","exchangeAddress","exchangeIsOpen","exchangeOwner","exchangeToken","exchangeNumberCompanies","exchangeCompanies","reducer","state","action","type","payload","adminPanelOpen","address","descr","companyAddress","key","value","transactAdminOpenMode","subtype","transactNewCompanyName","transactNewCompanySymbol","transactNewCompanyPrice","transactBuyEE","StoreProvider","props","useReducer","dispatch","Provider","children","useStyles","makeStyles","theme","card","maxWidth","backgroundColor","palette","secondary","dark","pos","marginBottom","fab","float","margin","spacing","ListedCompanyCard","classes","useContext","Card","className","raised","CardContent","Typography","variant","symbol","color","name","noWrap","utils","fromWei","pricePerShare","toString","sharesForSale","totalSupply","ownedShares","Fab","size","aria-label","onClick","edit","ListedCompanyDial","useState","buySharesCost","setBuySharesCost","buyShares","setBuyShares","updatePrice","setUpdatePrice","listShares","setListShares","delistShares","setDelistShares","mintShares","setMintShares","enqueueSnackbar","useSnackbar","buySharesTransaction","a","c","methods","buyCompanyShares","toWei","send","company","allowance","owner","call","remainingShares","exchangeTokenBalance","newTokenBalance","exchangeTokenStaked","newTokenStaked","balanceOf","eth","getBalance","_ethBalance","updatePriceTransaction","updateCompanyPrice","listedCompanyPrices","newPrice","mintSharesTransaction","mint","newSupply","listSharesTransaction","increaseAllowance","result","newSharesListed","events","Approval","returnValues","delistSharesTransaction","decreaseAllowance","Fragment","Dialog","open","onClose","handleClose","aria-labelledby","DialogTitle","DialogContent","Grid","container","direction","alignItems","item","zeroMinWidth","TextField","label","onChange","event","target","inputProps","step","min","InputLabelProps","shrink","helperText","Button","disabled","root","padding","textField","marginLeft","marginRight","width","menu","button","ListedCompanyAddNew","price","newCompany","setNewCompany","handleNewCompany","createNewCompanyAndListTransaction","createCompanyAndList","numberOfOwnedCompanies","_numberCompanies","i","ownerCompanies","ownedCompany","Box","display","height","Home","setOpen","setCompany","setAddress","newCompanyOpen","setNewCompanyOpen","handleClickOpen","Paper","justify","Object","map","getWeb3","window","ethereum","autoRefreshOnNetworkChange","Web3","enable","console","log","provider","providers","HttpProvider","list","menuButton","TemporaryDrawer","toggleDrawer","side","IconButton","edge","Drawer","role","onKeyDown","List","ListItem","component","Link","to","ListItemIcon","ListItemText","primary","Divider","flexGrow","background","main","title","balanceBar","indigo","NavBar","connectWeb3","on","accounts","location","reload","storeWeb3Contract","error","getAccounts","net","getId","networkId","deployedAddress","PrivateExchangeProxy","networks","ens","getAddress","instance","Contract","PrivateExchangeLogic","abi","from","exchangeDetails","userDetails","isOwner","_isAdmin","_staked","_balance","options","isOpen","_isOpen","_owner","_token","_tokenContract","PrivateCompany","numberOfListedCompanies","listedCompanies","listedCompanyAddress","companyContract","companyName","companySymbol","companyOwner","companyPrice","companySharesForSales","companyTotalSupply","_ownedShares","AppBar","position","Toolbar","FormControlLabel","control","Switch","checked","LinearProgress","UserCapabilities","increaseStakeTokens","setIncreaseStakeTokens","decreaseStakeTokens","setDecreaseStakeTokens","buyTokens","setBuyTokens","sellTokens","setSellTokens","buyExchangeTokenTransaction","buyExchangeToken","sellExchangeTokenTransaction","amount","sellExchangeToken","decreaseStakeExchangeTokenTransaction","newStake","increaseStakeExchangeTokenTransaction","UserAdmin","adminMode","setAdminMode","switchOpenModeTransaction","switchOpenMode","select","SelectProps","MenuProps","kvp","MenuItem","User","About","EventManager","latestState","useRef","useEffect","current","exchangeOpened","exchangeClosed","companyListed","allEvents","userBalanceUpdated","_oldBalance","assign","_oldBalanceDisplay","_newBalanceDisplay","userAllowanceUpdated","_oldAllowance","_allowance","_oldDisplay","_newDisplay","createMuiTheme","teal","responsiveFontSizes","Boolean","hostname","match","ReactDOM","render","ThemeProvider","CssBaseline","maxSnack","path","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8cbeba8a.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 432;","import React from \"react\";\n\nexport const Store = React.createContext();\n\nconst initialState = {\n  sideBarOpen: false,\n  loading: false,\n  ropstenENS: \"entangle.eth\",\n\n  web3: null,\n  network: null,\n  account: null,\n  contract: null,\n\n  userIsAdmin: false,\n  userEthBalance: \"0\",\n  userBalance: \"0\",\n  userStaked: \"0\",\n  userNumberCompanies: 0,\n  userOwnedCompanies: {},\n\n  exchangeAddress: \"\",\n  exchangeIsOpen: false,\n  exchangeOwner: \"\",\n  exchangeToken: \"\",\n  exchangeNumberCompanies: 0,\n  exchangeCompanies: {}\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"LOADING\":\n      return { ...state, loading: true };\n    case \"LOADED\":\n      return { ...state, loading: false };\n    case \"SIDE_DRAWER\":\n      return { ...state, sideBarOpen: action.payload };\n    case \"ADMINPANEL_OPEN\":\n      return { ...state, adminPanelOpen: action.payload };\n    case \"SET_WEB3\":\n      return { ...state, web3: action.payload };\n    case \"SET_NETWORK\":\n      return { ...state, network: action.payload };\n    case \"SET_ACCOUNT\":\n      return { ...state, account: action.payload };\n    case \"SET_CONTRACT\":\n      return { ...state, contract: action.payload };\n    case \"SET_USER_ISADMIN\":\n      return { ...state, userIsAdmin: action.payload };\n    case \"SET_USER_ETHBALANCE\":\n      return { ...state, userEthBalance: action.payload };\n    case \"SET_USER_BALANCE\":\n      return { ...state, userBalance: action.payload };\n    case \"SET_USER_STAKED\":\n      return { ...state, userStaked: action.payload };\n    case \"GET_USER_BALANCE\":\n      return state.userBalance;\n    case \"SET_USER_NUMBERCOMPANIES\":\n      return { ...state, userNumberCompanies: action.payload };\n    case \"ADD_USER_OWNEDCOMPANY\":\n      return {\n        ...state,\n        userOwnedCompanies: {\n          ...state.exchangeCompanies,\n          [action.payload]: true\n        }\n      };\n    case \"REMOVE_USER_OWNEDCOMPANY\":\n      return {\n        ...state,\n        userOwnedCompanies: {\n          ...state.exchangeCompanies,\n          [action.payload]: false\n        }\n      };\n    case \"SET_EXCHANGE_ADDRESS\":\n      return { ...state, exchangeAddress: action.payload };\n    case \"SET_EXCHANGE_ISOPEN\":\n      return { ...state, exchangeIsOpen: action.payload };\n    case \"SET_EXCHANGE_OWNER\":\n      return { ...state, exchangeOwner: action.payload };\n    case \"SET_EXCHANGE_TOKEN\":\n      return { ...state, exchangeToken: action.payload };\n    case \"SET_EXCHANGE_NUMBERCOMPANIES\":\n      return { ...state, exchangeNumberCompanies: action.payload };\n    case \"SET_EXCHANGE_COMPANIES\":\n      return {\n        ...state,\n        exchangeCompanies: action.payload\n      };\n    case \"ADD_EXCHANGE_COMPANY\":\n      return {\n        ...state,\n        exchangeCompanies: {\n          ...state.exchangeCompanies,\n          [action.payload.address]: action.payload.descr\n        }\n      };\n    case \"UPDATE_EXCHANGE_COMPANY\":\n      const companyAddress = action.payload.address;\n      return {\n        ...state,\n        exchangeCompanies: {\n          ...state.exchangeCompanies,\n          [companyAddress]: {\n            ...state.exchangeCompanies[companyAddress],\n            [action.payload.key]: action.payload.value\n          }\n        }\n      };\n\n    case \"SET_ADMIN_OPENMODE\":\n      return { ...state, transactAdminOpenMode: action.payload };\n    case \"SET_USER_NEWCOMPANY\":\n      switch (action.subtype) {\n        case \"name\":\n          return { ...state, transactNewCompanyName: action.payload };\n        case \"symbol\":\n          return { ...state, transactNewCompanySymbol: action.payload };\n        case \"price\":\n          return { ...state, transactNewCompanyPrice: action.payload };\n        default:\n          return state;\n      }\n    case \"CLEAR_USER_NEWCOMPANY\":\n      return {\n        ...state,\n        transactNewCompanyName: \"\",\n        transactNewCompanySymbol: \"\",\n        transactNewCompanyPrice: 1\n      };\n    case \"SET_USER_BUYEE\":\n      return { ...state, transactBuyEE: action.payload };\n    default:\n      return state;\n  }\n}\n\nexport function StoreProvider(props) {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n  const value = { state, dispatch };\n  return <Store.Provider value={value}>{props.children}</Store.Provider>;\n}\n","import React, { useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport Fab from \"@material-ui/core/Fab\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Store } from \"./Store\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nconst useStyles = makeStyles(theme => ({\n  card: {\n    maxWidth: 275,\n    backgroundColor: theme.palette.secondary.dark\n  },\n  pos: {\n    marginBottom: 12\n  },\n  fab: {\n    float: \"right\",\n    margin: theme.spacing(1)\n  }\n}));\n\nexport default function ListedCompanyCard(props) {\n  const classes = useStyles();\n  const { state } = useContext(Store);\n\n  return (\n    <Card className={classes.card} raised>\n      <CardContent>\n        <Typography variant=\"h5\">\n          {state.exchangeCompanies[props.address].symbol}\n        </Typography>\n        <Typography variant=\"h6\" className={classes.pos} color=\"textSecondary\">\n          {state.exchangeCompanies[props.address].name}\n        </Typography>\n        <Typography variant=\"body2\" noWrap color=\"textSecondary\">\n          Address: {props.address}\n          {<br />}\n          Price/Share:{\" \"}\n          {state.web3.utils.fromWei(\n            state.exchangeCompanies[props.address].pricePerShare.toString()\n          )}\n          {<br />}\n          Shares for Sale:{\" \"}\n          {state.web3.utils.fromWei(\n            state.exchangeCompanies[props.address].sharesForSale.toString()\n          )}\n          {<br />}\n          Total Supply:{\" \"}\n          {state.web3.utils.fromWei(\n            state.exchangeCompanies[props.address].totalSupply.toString()\n          )}\n        </Typography>\n        <Typography variant=\"body2\" noWrap color=\"textPrimary\">\n          {<br />}\n          Shares Owned:{\" \"}\n          {state.web3.utils.fromWei(\n            state.exchangeCompanies[props.address].ownedShares.toString()\n          )}\n        </Typography>\n        <Fab\n          color=\"default\"\n          size=\"small\"\n          aria-label=\"edit\"\n          className={classes.fab}\n          onClick={props.edit(props.address)}\n        >\n          <EditIcon />\n        </Fab>\n      </CardContent>\n    </Card>\n  );\n}\n","import React, { useContext } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { useSnackbar } from \"notistack\";\nimport { Store } from \"./Store\";\n\nexport default function ListedCompanyDial(props) {\n  const { state, dispatch } = useContext(Store);\n  const [buySharesCost, setBuySharesCost] = React.useState(\"0\");\n  const [buyShares, setBuyShares] = React.useState(\"0\");\n  const [updatePrice, setUpdatePrice] = React.useState(\"0\");\n  const [listShares, setListShares] = React.useState(\"0\");\n  const [delistShares, setDelistShares] = React.useState(\"0\");\n  const [mintShares, setMintShares] = React.useState(\"0\");\n  const { enqueueSnackbar } = useSnackbar();\n  const handleBuyShares = () => async event => {\n    setBuyShares(event.target.value.toString());\n    setBuySharesCost(\n      (\n        event.target.value *\n        state.web3.utils.fromWei(props.company.pricePerShare)\n      ).toString()\n    );\n  };\n  const handleUpdatePrice = () => async event => {\n    setUpdatePrice(event.target.value.toString());\n  };\n  const handleListShares = () => async event => {\n    setListShares(event.target.value.toString());\n  };\n  const handleDelistShares = () => async event => {\n    setDelistShares(event.target.value.toString());\n  };\n  const handleMintShares = () => async event => {\n    setMintShares(event.target.value.toString());\n  };\n  const buySharesTransaction = async () => {\n    try {\n      dispatch({\n        type: \"LOADING\"\n      });\n      if (state.contract) {\n        const c = state.contract;\n        await c.methods\n          .buyCompanyShares(props.address, state.web3.utils.toWei(buyShares))\n          .send();\n        const remainingShares = await props.company.contract.methods\n          .allowance(props.company.owner, state.exchangeAddress)\n          .call();\n        dispatch({\n          type: \"UPDATE_EXCHANGE_COMPANY\",\n          payload: {\n            address: props.address,\n            key: \"sharesForSale\",\n            value: remainingShares\n          }\n        });\n        const newTokenBalance = await c.methods.exchangeTokenBalance().call();\n        dispatch({\n          type: \"SET_USER_BALANCE\",\n          payload: newTokenBalance\n        });\n        const newTokenStaked = await c.methods.exchangeTokenStaked().call();\n        dispatch({\n          type: \"SET_USER_STAKED\",\n          payload: newTokenStaked\n        });\n        const ownedShares = await props.company.contract.methods\n          .balanceOf(state.account)\n          .call();\n        dispatch({\n          type: \"UPDATE_EXCHANGE_COMPANY\",\n          payload: {\n            address: props.address,\n            key: \"ownedShares\",\n            value: ownedShares\n          }\n        });\n        setBuyShares(\"0\");\n        setBuySharesCost(\"0\");\n        const _ethBalance = await state.web3.eth.getBalance(state.account);\n        dispatch({\n          type: \"SET_USER_ETHBALANCE\",\n          payload: _ethBalance.toString()\n        });\n        enqueueSnackbar(\"Buy shares transaction successful\", {\n          variant: \"success\"\n        });\n      }\n    } finally {\n      dispatch({\n        type: \"LOADED\"\n      });\n    }\n  };\n  const updatePriceTransaction = async () => {\n    try {\n      dispatch({\n        type: \"LOADING\"\n      });\n      if (state.contract) {\n        const c = state.contract;\n        await c.methods\n          .updateCompanyPrice(\n            props.address,\n            state.web3.utils.toWei(updatePrice)\n          )\n          .send();\n        const newPrice = await c.methods\n          .listedCompanyPrices(props.address)\n          .call();\n        dispatch({\n          type: \"UPDATE_EXCHANGE_COMPANY\",\n          payload: {\n            address: props.address,\n            key: \"pricePerShare\",\n            value: newPrice\n          }\n        });\n        const newTokenBalance = await c.methods.exchangeTokenBalance().call();\n        dispatch({\n          type: \"SET_USER_BALANCE\",\n          payload: newTokenBalance\n        });\n        const newTokenStaked = await c.methods.exchangeTokenStaked().call();\n        dispatch({\n          type: \"SET_USER_STAKED\",\n          payload: newTokenStaked\n        });\n        const ownedShares = await props.company.contract.methods\n          .balanceOf(state.account)\n          .call();\n        dispatch({\n          type: \"UPDATE_EXCHANGE_COMPANY\",\n          payload: {\n            address: props.address,\n            key: \"ownedShares\",\n            value: ownedShares\n          }\n        });\n        setBuyShares(\"0\");\n        setBuySharesCost(\"0\");\n        const _ethBalance = await state.web3.eth.getBalance(state.account);\n        dispatch({\n          type: \"SET_USER_ETHBALANCE\",\n          payload: _ethBalance.toString()\n        });\n        enqueueSnackbar(\"Buy shares transaction successful\", {\n          variant: \"success\"\n        });\n      }\n    } finally {\n      dispatch({\n        type: \"LOADED\"\n      });\n    }\n  };\n  const mintSharesTransaction = async () => {\n    try {\n      dispatch({\n        type: \"LOADING\"\n      });\n      if (props.company.contract) {\n        const c = props.company.contract;\n        await c.methods.mint(state.web3.utils.toWei(mintShares)).send();\n        const newSupply = await c.methods.totalSupply().call();\n        dispatch({\n          type: \"UPDATE_EXCHANGE_COMPANY\",\n          payload: {\n            address: props.address,\n            key: \"totalSupply\",\n            value: newSupply\n          }\n        });\n        const ownedShares = await c.methods.balanceOf(state.account).call();\n        dispatch({\n          type: \"UPDATE_EXCHANGE_COMPANY\",\n          payload: {\n            address: props.address,\n            key: \"ownedShares\",\n            value: ownedShares\n          }\n        });\n        setMintShares(\"0\");\n        const _ethBalance = await state.web3.eth.getBalance(state.account);\n        dispatch({\n          type: \"SET_USER_ETHBALANCE\",\n          payload: _ethBalance.toString()\n        });\n        enqueueSnackbar(\"Mint shares transaction successful\", {\n          variant: \"success\"\n        });\n      }\n    } finally {\n      dispatch({\n        type: \"LOADED\"\n      });\n    }\n  };\n  const listSharesTransaction = async () => {\n    try {\n      dispatch({\n        type: \"LOADING\"\n      });\n      if (props.company.contract) {\n        const c = props.company.contract;\n        const result = await c.methods\n          .increaseAllowance(\n            state.exchangeAddress,\n            state.web3.utils.toWei(listShares)\n          )\n          .send();\n        const newSharesListed = result.events.Approval.returnValues.value;\n        dispatch({\n          type: \"UPDATE_EXCHANGE_COMPANY\",\n          payload: {\n            address: props.address,\n            key: \"sharesForSale\",\n            value: newSharesListed\n          }\n        });\n        setListShares(\"0\");\n        const _ethBalance = await state.web3.eth.getBalance(state.account);\n        dispatch({\n          type: \"SET_USER_ETHBALANCE\",\n          payload: _ethBalance.toString()\n        });\n        enqueueSnackbar(\"List shares transaction successful\", {\n          variant: \"success\"\n        });\n      }\n    } finally {\n      dispatch({\n        type: \"LOADED\"\n      });\n    }\n  };\n  const delistSharesTransaction = async () => {\n    try {\n      dispatch({\n        type: \"LOADING\"\n      });\n      if (props.company.contract) {\n        const c = props.company.contract;\n        const result = await c.methods\n          .decreaseAllowance(\n            state.exchangeAddress,\n            state.web3.utils.toWei(delistShares)\n          )\n          .send();\n        const newSharesListed = result.events.Approval.returnValues.value;\n        dispatch({\n          type: \"UPDATE_EXCHANGE_COMPANY\",\n          payload: {\n            address: props.address,\n            key: \"sharesForSale\",\n            value: newSharesListed\n          }\n        });\n        setDelistShares(\"0\");\n        const _ethBalance = await state.web3.eth.getBalance(state.account);\n        dispatch({\n          type: \"SET_USER_ETHBALANCE\",\n          payload: _ethBalance.toString()\n        });\n        enqueueSnackbar(\"Delist shares transaction successful\", {\n          variant: \"success\"\n        });\n      }\n    } finally {\n      dispatch({\n        type: \"LOADED\"\n      });\n    }\n  };\n  return (\n    <React.Fragment>\n      <Dialog\n        maxWidth=\"xl\"\n        open={props.open}\n        onClose={props.handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">{props.company.symbol}</DialogTitle>\n\n        <DialogContent>\n          <Grid container direction=\"row\" alignItems=\"center\" spacing={2}>\n            <Grid item zeroMinWidth>\n              <TextField\n                key=\"buyShares\"\n                id=\"buyShares\"\n                label=\"Buy No. of Shares\"\n                value={buyShares}\n                onChange={handleBuyShares()}\n                type=\"number\"\n                inputProps={{ step: \"0.01\", min: \"0.000000000000000001\" }}\n                InputLabelProps={{\n                  shrink: true\n                }}\n                margin=\"normal\"\n                variant=\"outlined\"\n                helperText={\"Cost in EE$: \" + buySharesCost}\n              />\n            </Grid>\n            <Grid item zeroMinWidth>\n              <Button\n                disabled={state.loading}\n                color=\"primary\"\n                size=\"large\"\n                variant=\"contained\"\n                onClick={buySharesTransaction}\n              >\n                send\n              </Button>\n            </Grid>\n          </Grid>\n          {props.company.owner === state.account && (\n            <React.Fragment>\n              <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                Owner Functions:\n              </Typography>{\" \"}\n              <Grid container direction=\"row\" alignItems=\"center\" spacing={2}>\n                <Grid item zeroMinWidth>\n                  <TextField\n                    key=\"updatePrice\"\n                    id=\"updatePrice\"\n                    label=\"Update Price\"\n                    value={updatePrice}\n                    onChange={handleUpdatePrice()}\n                    type=\"number\"\n                    inputProps={{ step: \"0.01\", min: \"0.000000000000000001\" }}\n                    InputLabelProps={{\n                      shrink: true\n                    }}\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item zeroMinWidth>\n                  <Button\n                    disabled={state.loading}\n                    color=\"primary\"\n                    size=\"large\"\n                    variant=\"contained\"\n                    onClick={updatePriceTransaction}\n                  >\n                    update\n                  </Button>\n                </Grid>\n              </Grid>\n              <Grid container direction=\"row\" alignItems=\"center\" spacing={2}>\n                <Grid item zeroMinWidth>\n                  <TextField\n                    key=\"listShares\"\n                    id=\"listShares\"\n                    label=\"List No. of Shares\"\n                    value={listShares}\n                    onChange={handleListShares()}\n                    type=\"number\"\n                    inputProps={{ step: \"0.01\", min: \"0.000000000000000001\" }}\n                    InputLabelProps={{\n                      shrink: true\n                    }}\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item zeroMinWidth>\n                  <Button\n                    disabled={state.loading}\n                    color=\"primary\"\n                    size=\"large\"\n                    variant=\"contained\"\n                    onClick={listSharesTransaction}\n                  >\n                    list\n                  </Button>\n                </Grid>\n                <Grid item zeroMinWidth>\n                  <TextField\n                    key=\"delistShares\"\n                    id=\"delistShares\"\n                    label=\"Delist No. of Shares\"\n                    value={delistShares}\n                    onChange={handleDelistShares()}\n                    type=\"number\"\n                    inputProps={{ step: \"0.01\", min: \"0.000000000000000001\" }}\n                    InputLabelProps={{\n                      shrink: true\n                    }}\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item zeroMinWidth>\n                  <Button\n                    disabled={state.loading}\n                    color=\"primary\"\n                    size=\"large\"\n                    variant=\"contained\"\n                    onClick={delistSharesTransaction}\n                  >\n                    delist\n                  </Button>\n                </Grid>\n              </Grid>\n              <Grid container direction=\"row\" alignItems=\"center\" spacing={2}>\n                <Grid item zeroMinWidth>\n                  <TextField\n                    key=\"mintShares\"\n                    id=\"mintShares\"\n                    label=\"Mint No. of Shares\"\n                    value={mintShares}\n                    onChange={handleMintShares()}\n                    type=\"number\"\n                    inputProps={{ step: \"0.01\", min: \"0.000000000000000001\" }}\n                    InputLabelProps={{\n                      shrink: true\n                    }}\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item zeroMinWidth>\n                  <Button\n                    disabled={state.loading}\n                    color=\"primary\"\n                    size=\"large\"\n                    variant=\"contained\"\n                    onClick={mintSharesTransaction}\n                  >\n                    mint\n                  </Button>\n                </Grid>\n              </Grid>\n            </React.Fragment>\n          )}\n        </DialogContent>\n      </Dialog>\n    </React.Fragment>\n  );\n}\n","import React, { useContext, useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Box from \"@material-ui/core/Box\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Store } from \"./Store\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(1, 0, 0, 0)\n  },\n  container: {\n    padding: theme.spacing(2, 3, 2, 3),\n    alignItems: \"center\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200\n  },\n  menu: {\n    width: 200\n  },\n  button: {\n    margin: theme.spacing(1)\n  }\n}));\nexport default function ListedCompanyAddNew(props) {\n  const { state, dispatch } = useContext(Store);\n  const classes = useStyles();\n  const [newCompany, setNewCompany] = useState({\n    name: \"\",\n    symbol: \"\",\n    price: 0\n  });\n  const handleNewCompany = name => event => {\n    setNewCompany({ ...newCompany, [name]: event.target.value.toString() });\n  };\n  const createNewCompanyAndListTransaction = async () => {\n    try {\n      dispatch({\n        type: \"LOADING\"\n      });\n      if (state.contract) {\n        const c = state.contract;\n        await c.methods\n          .createCompanyAndList(\n            newCompany.name,\n            newCompany.symbol,\n            state.web3.utils.toWei(newCompany.price)\n          )\n          .send();\n        setNewCompany({ name: \"\", symbol: \"\", price: 0 });\n        const _numberCompanies = await state.contract.methods\n          .numberOfOwnedCompanies()\n          .call();\n        dispatch({\n          type: \"SET_USER_NUMBERCOMPANIES\",\n          payload: _numberCompanies\n        });\n        for (let i = 0; i < _numberCompanies; i++) {\n          const ownedCompany = await state.contract.methods\n            .ownerCompanies(state.account, i)\n            .call();\n          dispatch({ type: \"ADD_USER_OWNEDCOMPANIES\", payload: ownedCompany });\n        }\n        const _ethBalance = await state.web3.eth.getBalance(state.account);\n        dispatch({\n          type: \"SET_USER_ETHBALANCE\",\n          payload: _ethBalance.toString()\n        });\n      }\n    } finally {\n      dispatch({\n        type: \"LOADED\"\n      });\n    }\n  };\n  return (\n    <React.Fragment>\n      <Dialog\n        maxWidth=\"xl\"\n        open={props.open}\n        onClose={props.handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Add new company</DialogTitle>\n\n        <DialogContent>\n          <Box display=\"flex\" alignItems=\"center\">\n            <TextField\n              id=\"CompanyName\"\n              label=\"Company Name\"\n              className={classes.textField}\n              value={newCompany.name}\n              onChange={handleNewCompany(\"name\")}\n              margin=\"normal\"\n              variant=\"outlined\"\n            />\n            <TextField\n              id=\"CompanySymbol\"\n              label=\"Company Symbol\"\n              className={classes.textField}\n              value={newCompany.symbol}\n              onChange={handleNewCompany(\"symbol\")}\n              margin=\"normal\"\n              variant=\"outlined\"\n            />\n            <TextField\n              id=\"PricePerShare\"\n              label=\"Price per 1 unit share (EE$)\"\n              value={newCompany.price}\n              onChange={handleNewCompany(\"price\")}\n              type=\"number\"\n              inputProps={{ step: \"0.01\", min: \"0.000000000000000001\" }}\n              className={classes.textField}\n              InputLabelProps={{\n                shrink: true\n              }}\n              margin=\"normal\"\n              variant=\"outlined\"\n            />\n            <Button\n              disabled={state.loading}\n              color=\"primary\"\n              size=\"large\"\n              variant=\"contained\"\n              className={classes.button}\n              onClick={createNewCompanyAndListTransaction}\n            >\n              send\n            </Button>\n          </Box>\n        </DialogContent>\n      </Dialog>\n    </React.Fragment>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Fab from \"@material-ui/core/Fab\";\nimport ListedCompanyCard from \"./ListedCompanyCard\";\nimport ListedCompanyDial from \"./ListedCompanyDial\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { Store } from \"./Store\";\nimport ListedCompanyAddNew from \"./ListedCompanyAddNew\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(2)\n  },\n  card: {\n    height: 140,\n    width: 100\n  }\n}));\n\nexport default function Home() {\n  const classes = useStyles();\n  const { state } = useContext(Store);\n  const [open, setOpen] = React.useState(false);\n  const [company, setCompany] = React.useState({});\n  const [address, setAddress] = React.useState(\"\");\n\n  const [newCompanyOpen, setNewCompanyOpen] = React.useState(false);\n  const handleClickOpen = address => event => {\n    setOpen(true);\n    setAddress(address);\n    setCompany(state.exchangeCompanies[address]);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const newCompanyClose = () => {\n    setNewCompanyOpen(false);\n  };\n  return (\n    <React.Fragment>\n      <Paper className={classes.root}>\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"flex-start\"\n          alignItems=\"flex-start\"\n          spacing={2}\n        >\n          <Grid item>\n            <Fab\n              color=\"primary\"\n              aria-label=\"add\"\n              className={classes.fab}\n              onClick={() => {\n                setNewCompanyOpen(true);\n              }}\n            >\n              <AddIcon />\n            </Fab>\n          </Grid>\n          {Object.keys(state.exchangeCompanies).map(address => (\n            <Grid item key={address}>\n              <ListedCompanyCard\n                key={address}\n                className={classes.card}\n                address={address}\n                edit={handleClickOpen}\n              />\n            </Grid>\n          ))}\n        </Grid>\n      </Paper>\n      <ListedCompanyAddNew\n        open={newCompanyOpen}\n        handleClose={newCompanyClose}\n      />\n      <ListedCompanyDial\n        open={open}\n        address={address}\n        company={company}\n        handleClose={handleClose}\n      />\n    </React.Fragment>\n  );\n}\n","import Web3 from \"web3\";\n\nconst getWeb3 = async () => {\n  // Wait for loading completion to avoid race conditions with web3 injection timing.\n  // Modern dapp browsers...\n  if (window.ethereum) {\n    window.ethereum.autoRefreshOnNetworkChange = false;\n    const web3 = new Web3(window.ethereum);\n    // Request account access if needed\n    await window.ethereum.enable();\n    // Acccounts now exposed\n    return web3;\n  }\n  // Legacy dapp browsers...\n  else if (window.web3) {\n    // Use Mist/MetaMask's provider.\n    const web3 = window.web3;\n    console.log(\"Injected web3 detected.\");\n    return web3;\n  }\n  // Fallback to localhost; use dev console port by default...\n  else {\n    const provider = new Web3.providers.HttpProvider(\"http://127.0.0.1:8545\");\n    const web3 = new Web3(provider);\n    console.log(\"No web3 instance injected, using Local web3.\");\n    return web3;\n  }\n};\n\nexport default getWeb3;\n","import React, { useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport AppsIcon from \"@material-ui/icons/Apps\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport PersonIcon from \"@material-ui/icons/Person\";\n\nimport { Link } from \"react-router-dom\";\nimport { Store } from \"./Store\";\n\nconst useStyles = makeStyles(theme => ({\n  list: {\n    width: 250\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  }\n}));\n\nexport default function TemporaryDrawer() {\n  const classes = useStyles();\n  const { state, dispatch } = useContext(Store);\n\n  const toggleDrawer = (side, open) => event => {\n    if (\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n    dispatch({\n      type: \"SIDE_DRAWER\",\n      payload: open\n    });\n  };\n  const sideList = side => (\n    <div\n      className={classes.list}\n      role=\"presentation\"\n      onClick={toggleDrawer(side, false)}\n      onKeyDown={toggleDrawer(side, false)}\n    >\n      <List>\n        <ListItem button key={\"Home\"} component={Link} to=\"/\">\n          <ListItemIcon>\n            <AppsIcon />\n          </ListItemIcon>\n          <ListItemText primary={\"Home\"} />\n        </ListItem>\n\n        <ListItem button key={\"About\"} component={Link} to=\"About\">\n          <ListItemIcon>\n            <InfoIcon />\n          </ListItemIcon>\n          <ListItemText primary={\"About\"} />\n        </ListItem>\n\n        <ListItem button key={\"User\"} component={Link} to=\"User\">\n          <ListItemIcon>\n            <PersonIcon />\n          </ListItemIcon>\n          <ListItemText primary={\"User\"} />\n        </ListItem>\n      </List>\n      <Divider />\n    </div>\n  );\n\n  return (\n    <div>\n      <IconButton\n        edge=\"start\"\n        className={classes.menuButton}\n        color=\"inherit\"\n        aria-label=\"menu\"\n        onClick={toggleDrawer(\"left\", true)}\n      >\n        <MenuIcon />\n      </IconButton>\n      <Drawer open={state.sideBarOpen} onClose={toggleDrawer(\"left\", false)}>\n        {sideList(\"left\")}\n      </Drawer>\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Switch from \"@material-ui/core/Switch\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport getWeb3 from \"./utils/getWeb3\";\nimport TemporaryDrawer from \"./NavDrawer\";\nimport PrivateExchangeProxy from \"./contracts/PrivateExchangeProxy.json\";\nimport PrivateExchangeLogic from \"./contracts/PrivateExchangeLogic.json\";\nimport PrivateCompany from \"./contracts/PrivateCompany.json\";\nimport { Link } from \"react-router-dom\";\nimport { useSnackbar } from \"notistack\";\nimport indigo from \"@material-ui/core/colors/indigo\";\nimport { Store } from \"./Store\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    background: theme.palette.primary.main\n  },\n  title: {\n    flexGrow: 1\n  },\n  label: {\n    noWrap: true\n  },\n  balanceBar: {\n    backgroundColor: indigo[900],\n    padding: theme.spacing(1, 3, 1, 3)\n  }\n}));\n\nexport default function NavBar() {\n  const classes = useStyles();\n  const { state, dispatch } = useContext(Store);\n  const { enqueueSnackbar } = useSnackbar();\n  const connectWeb3 = async () => {\n    try {\n      dispatch({\n        type: \"LOADING\"\n      });\n      //store web3 for contract interaction in whole app\n      const web3 = await getWeb3();\n      if (window.ethereum) {\n        window.ethereum.on(\"accountsChanged\", accounts => {\n          window.location.reload(true);\n        });\n        window.ethereum.on(\"networkChanged\", accounts => {\n          window.location.reload(true);\n        });\n      }\n      dispatch({\n        type: \"SET_WEB3\",\n        payload: web3\n      });\n      await storeWeb3Contract(web3);\n    } catch (error) {\n      console.error(error);\n      enqueueSnackbar(\"Error with web3 connection\", { variant: \"error\" });\n    } finally {\n      dispatch({\n        type: \"LOADED\"\n      });\n    }\n  };\n  const storeWeb3Contract = async web3 => {\n    try {\n      const accounts = await web3.eth.getAccounts();\n      const account = accounts[0];\n      dispatch({\n        type: \"SET_ACCOUNT\",\n        payload: account\n      });\n      enqueueSnackbar(\"Account initialized\", { variant: \"success\" });\n      const networkId = await web3.eth.net.getId();\n      dispatch({\n        type: \"SET_NETWORK\",\n        payload: networkId\n      });\n      let deployedAddress = PrivateExchangeProxy.networks[networkId].address;\n      if (networkId === 3) {\n        console.log(\"ropsten detected, resolving address using ENS\");\n        try {\n          deployedAddress = await web3.eth.ens.getAddress(state.ropstenENS);\n        } catch (err) {\n          console.error(err);\n        }\n      }\n      const instance = new web3.eth.Contract(\n        PrivateExchangeLogic.abi,\n        deployedAddress,\n        {\n          from: account\n        }\n      );\n      dispatch({\n        type: \"SET_CONTRACT\",\n        payload: instance\n      });\n      enqueueSnackbar(\"Contract initialized\", { variant: \"success\" });\n      await exchangeDetails(web3, instance, account);\n      await userDetails(web3, instance, account);\n    } catch (error) {\n      console.error(error);\n      enqueueSnackbar(\"Error with contract initialization\", {\n        variant: \"error\"\n      });\n    }\n  };\n  const userDetails = async (web3, c, account) => {\n    const _isAdmin = await c.methods.isOwner().call();\n    dispatch({ type: \"SET_USER_ISADMIN\", payload: _isAdmin });\n    const _ethBalance = await web3.eth.getBalance(account);\n    dispatch({ type: \"SET_USER_ETHBALANCE\", payload: _ethBalance.toString() });\n    const _staked = await c.methods.exchangeTokenStaked().call();\n    dispatch({ type: \"SET_USER_STAKED\", payload: _staked.toString() });\n    const _balance = await c.methods.exchangeTokenBalance().call();\n    dispatch({ type: \"SET_USER_BALANCE\", payload: _balance.toString() });\n    const _numberCompanies = await c.methods.numberOfOwnedCompanies().call();\n    dispatch({ type: \"SET_USER_NUMBERCOMPANIES\", payload: _numberCompanies });\n    for (let i = 0; i < _numberCompanies; i++) {\n      const ownedCompany = await c.methods.ownerCompanies(account, i).call();\n      dispatch({ type: \"ADD_USER_OWNEDCOMPANIES\", payload: ownedCompany });\n    }\n  };\n  const exchangeDetails = async (web3, c, account) => {\n    dispatch({\n      type: \"SET_EXCHANGE_ADDRESS\",\n      payload: c.options.address\n    });\n    const _isOpen = await c.methods.isOpen().call();\n    dispatch({ type: \"SET_EXCHANGE_ISOPEN\", payload: _isOpen });\n    const _owner = await c.methods.owner().call();\n    dispatch({ type: \"SET_EXCHANGE_OWNER\", payload: _owner });\n    const _token = await c.methods.exchangeToken().call();\n    const _tokenContract = new web3.eth.Contract(PrivateCompany.abi, _token, {\n      from: account\n    });\n    dispatch({\n      type: \"SET_EXCHANGE_TOKEN\",\n      payload: _tokenContract\n    });\n    const _numberCompanies = await c.methods.numberOfListedCompanies().call();\n    dispatch({\n      type: \"SET_EXCHANGE_NUMBERCOMPANIES\",\n      payload: _numberCompanies\n    });\n    for (let i = 0; i < _numberCompanies; i++) {\n      const listedCompanyAddress = await c.methods.listedCompanies(i).call();\n      const companyContract = new web3.eth.Contract(\n        PrivateCompany.abi,\n        listedCompanyAddress,\n        {\n          from: account\n        }\n      );\n      const companyName = await companyContract.methods.name().call();\n      const companySymbol = await companyContract.methods.symbol().call();\n      const companyOwner = await companyContract.methods.owner().call();\n      const companyPrice = await c.methods\n        .listedCompanyPrices(companyContract.options.address)\n        .call();\n      const companySharesForSales = await companyContract.methods\n        .allowance(companyOwner, c.options.address)\n        .call();\n      const companyTotalSupply = await companyContract.methods\n        .totalSupply()\n        .call();\n      const _ownedShares = await companyContract.methods\n        .balanceOf(account)\n        .call();\n      dispatch({\n        type: \"ADD_EXCHANGE_COMPANY\",\n        payload: {\n          address: listedCompanyAddress,\n          descr: {\n            name: companyName,\n            symbol: companySymbol,\n            owner: companyOwner,\n            sharesForSale: companySharesForSales,\n            pricePerShare: companyPrice,\n            totalSupply: companyTotalSupply,\n            ownedShares: _ownedShares,\n            contract: companyContract\n          }\n        }\n      });\n    }\n  };\n  return (\n    <React.Fragment>\n      <AppBar position=\"static\" className={classes.root}>\n        <Toolbar>\n          <TemporaryDrawer />\n          <Typography variant=\"h6\" className={classes.title} noWrap>\n            Entangle-Exchange\n            <Typography variant=\"subtitle1\" color=\"textPrimary\" noWrap>\n              {state.network === 3 ? '@ ropsten \"entangle.eth\"' : null}\n            </Typography>\n          </Typography>\n          <FormControlLabel\n            classes={{\n              label: classes.label // class name, e.g. `classes-nesting-label-x`\n            }}\n            control={\n              <Switch\n                color=\"default\"\n                checked={state.account !== null && state.contract != null}\n                disabled={state.account !== null && state.contract != null}\n                onChange={connectWeb3}\n                aria-label=\"Connect\"\n              />\n            }\n            label={\n              state.account && state.contract\n                ? \"User: \" + state.account\n                : \"Connect web3\"\n            }\n          />\n        </Toolbar>\n      </AppBar>\n      <Paper className={classes.balanceBar}>\n        <Grid\n          container\n          alignItems=\"flex-start\"\n          direction=\"row\"\n          justify=\"space-between\"\n        >\n          <Grid item>\n            <Grid container alignItems=\"flex-start\" direction=\"column\">\n              <Grid item>\n                <Typography variant=\"subtitle1\" color=\"textPrimary\" noWrap>\n                  Exchange Status:{\" \"}\n                  {state.account && state.contract\n                    ? state.exchangeIsOpen\n                      ? \"Open\"\n                      : \"Closed\"\n                    : null}\n                </Typography>\n              </Grid>\n              <Grid item component={Link} to=\"User\">\n                <Typography variant=\"subtitle1\" color=\"textPrimary\" noWrap>\n                  Ether Balance:{\" \"}\n                  {state.account &&\n                    state.web3.utils.fromWei(state.userEthBalance)}\n                </Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item>\n            <Grid container alignItems=\"flex-start\" direction=\"column\">\n              <Grid item component={Link} to=\"User\">\n                <Typography variant=\"subtitle1\" color=\"textPrimary\" noWrap>\n                  EE$ Allowance:{\" \"}\n                  {state.account &&\n                    state.contract &&\n                    state.web3.utils.fromWei(state.userStaked)}\n                </Typography>\n              </Grid>\n              <Grid item component={Link} to=\"User\">\n                <Typography variant=\"subtitle1\" color=\"textSecondary\" noWrap>\n                  EE$ Balance:{\" \"}\n                  {state.account &&\n                    state.contract &&\n                    state.web3.utils.fromWei(state.userBalance.toString())}\n                </Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Paper>\n      {state.loading && <LinearProgress color=\"secondary\" />}\n    </React.Fragment>\n  );\n}\n","import React, { useContext, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\nimport { Store } from \"./Store\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(1, 0, 0, 0)\n  },\n  container: {\n    padding: theme.spacing(2, 3, 2, 3),\n    alignItems: \"center\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200\n  },\n  menu: {\n    width: 200\n  },\n  button: {\n    margin: theme.spacing(1)\n  }\n}));\n\nexport default function UserCapabilities() {\n  const classes = useStyles();\n  const { state, dispatch } = useContext(Store);\n  const [increaseStakeTokens, setIncreaseStakeTokens] = useState(\"0\");\n  const [decreaseStakeTokens, setDecreaseStakeTokens] = useState(\"0\");\n  const [buyTokens, setBuyTokens] = useState(\"0\");\n  const [sellTokens, setSellTokens] = useState(\"0\");\n\n  const handleBuyTokens = () => async event => {\n    setBuyTokens(event.target.value.toString());\n  };\n\n  const handleSellTokens = () => async event => {\n    setSellTokens(event.target.value.toString());\n  };\n\n  const handleIncreaseStakeTokens = () => async event => {\n    setIncreaseStakeTokens(event.target.value.toString());\n  };\n\n  const handleDecreaseStakeTokens = () => async event => {\n    setDecreaseStakeTokens(event.target.value.toString());\n  };\n\n  const buyExchangeTokenTransaction = async () => {\n    try {\n      dispatch({ type: \"LOADING\" });\n      if (state.contract) {\n        const c = state.contract;\n        await c.methods.buyExchangeToken().send({\n          value: state.web3.utils.toWei(buyTokens)\n        });\n        setBuyTokens(0);\n        const _ethBalance = await state.web3.eth.getBalance(state.account);\n        dispatch({\n          type: \"SET_USER_ETHBALANCE\",\n          payload: _ethBalance.toString()\n        });\n      }\n    } finally {\n      dispatch({ type: \"LOADED\" });\n    }\n  };\n\n  const sellExchangeTokenTransaction = async () => {\n    try {\n      dispatch({\n        type: \"LOADING\"\n      });\n      if (state.contract) {\n        const c = state.contract;\n        const amount = state.web3.utils.toWei(sellTokens);\n        await c.methods.sellExchangeToken(amount).send();\n        setSellTokens(0);\n        const _ethBalance = await state.web3.eth.getBalance(state.account);\n        dispatch({\n          type: \"SET_USER_ETHBALANCE\",\n          payload: _ethBalance.toString()\n        });\n      }\n    } finally {\n      dispatch({\n        type: \"LOADED\"\n      });\n    }\n  };\n\n  const decreaseStakeExchangeTokenTransaction = async () => {\n    try {\n      dispatch({\n        type: \"LOADING\"\n      });\n      if (state.exchangeToken) {\n        const c = state.exchangeToken;\n        const result = await c.methods\n          .decreaseAllowance(\n            state.exchangeAddress,\n            state.web3.utils.toWei(decreaseStakeTokens)\n          )\n          .send();\n        const newStake = result.events.Approval.returnValues.value;\n        setDecreaseStakeTokens(0);\n        dispatch({ type: \"SET_USER_STAKED\", payload: newStake });\n        const _ethBalance = await state.web3.eth.getBalance(state.account);\n        dispatch({\n          type: \"SET_USER_ETHBALANCE\",\n          payload: _ethBalance.toString()\n        });\n      }\n    } finally {\n      dispatch({\n        type: \"LOADED\"\n      });\n    }\n  };\n  const increaseStakeExchangeTokenTransaction = async () => {\n    try {\n      dispatch({\n        type: \"LOADING\"\n      });\n      if (state.exchangeToken) {\n        const c = state.exchangeToken;\n        const result = await c.methods\n          .increaseAllowance(\n            state.exchangeAddress,\n            state.web3.utils.toWei(increaseStakeTokens)\n          )\n          .send();\n        const newStake = result.events.Approval.returnValues.value;\n        setIncreaseStakeTokens(0);\n        dispatch({ type: \"SET_USER_STAKED\", payload: newStake });\n        const _ethBalance = await state.web3.eth.getBalance(state.account);\n        dispatch({\n          type: \"SET_USER_ETHBALANCE\",\n          payload: _ethBalance.toString()\n        });\n      }\n    } finally {\n      dispatch({\n        type: \"LOADED\"\n      });\n    }\n  };\n  return (\n    <React.Fragment>\n      <Paper className={classes.container}>\n        <Grid container direction=\"column\">\n          <Grid item>\n            <Grid container direction=\"row\" alignItems=\"center\">\n              <Grid item>\n                <TextField\n                  key=\"IncreaseStake\"\n                  id=\"DecreaseStake\"\n                  label=\"Increase Allowance (EE$)\"\n                  value={increaseStakeTokens}\n                  onChange={handleIncreaseStakeTokens()}\n                  type=\"number\"\n                  inputProps={{ step: \"0.01\", min: \"0.000000000000000001\" }}\n                  className={classes.textField}\n                  InputLabelProps={{\n                    shrink: true\n                  }}\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid item>\n                <Button\n                  disabled={state.loading}\n                  color=\"primary\"\n                  size=\"large\"\n                  variant=\"contained\"\n                  className={classes.button}\n                  onClick={increaseStakeExchangeTokenTransaction}\n                >\n                  increase\n                </Button>\n              </Grid>\n              <Grid item>\n                <TextField\n                  key=\"DecreaseStake\"\n                  id=\"DecreaseStake\"\n                  label=\"Decrease Allowance (EE$)\"\n                  value={decreaseStakeTokens}\n                  onChange={handleDecreaseStakeTokens()}\n                  type=\"number\"\n                  inputProps={{ step: \"0.01\", min: \"0.000000000000000001\" }}\n                  className={classes.textField}\n                  InputLabelProps={{\n                    shrink: true\n                  }}\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid item>\n                <Button\n                  disabled={state.loading}\n                  color=\"primary\"\n                  size=\"large\"\n                  variant=\"contained\"\n                  className={classes.button}\n                  onClick={decreaseStakeExchangeTokenTransaction}\n                >\n                  decrease\n                </Button>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item>\n            <Grid container direction=\"row\" alignItems=\"center\">\n              <Grid item>\n                <TextField\n                  key=\"buyToke\"\n                  id=\"buyToken\"\n                  label=\"Amount Of EE$ to buy\"\n                  value={buyTokens}\n                  onChange={handleBuyTokens()}\n                  type=\"number\"\n                  inputProps={{ step: \"0.01\", min: \"0.000000000000000001\" }}\n                  className={classes.textField}\n                  InputLabelProps={{\n                    shrink: true\n                  }}\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid item>\n                <Button\n                  disabled={state.loading}\n                  color=\"primary\"\n                  size=\"large\"\n                  variant=\"contained\"\n                  className={classes.button}\n                  onClick={buyExchangeTokenTransaction}\n                >\n                  buy\n                </Button>\n              </Grid>\n              <Grid item>\n                <TextField\n                  key=\"sellToken\"\n                  id=\"sellToken\"\n                  label=\"Amount Of EE$ to sell\"\n                  value={sellTokens}\n                  onChange={handleSellTokens()}\n                  type=\"number\"\n                  inputProps={{ step: \"0.01\", min: \"0.000000000000000001\" }}\n                  className={classes.textField}\n                  InputLabelProps={{\n                    shrink: true\n                  }}\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid item>\n                <Button\n                  disabled={state.loading}\n                  color=\"primary\"\n                  size=\"large\"\n                  variant=\"contained\"\n                  className={classes.button}\n                  onClick={sellExchangeTokenTransaction}\n                >\n                  sell (from allowance)\n                </Button>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Paper>\n    </React.Fragment>\n  );\n}\n","import React, { useContext, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nimport { Store } from \"./Store\";\nconst useStyles = makeStyles(theme => ({\n  container: {\n    padding: theme.spacing(2, 3, 2, 3)\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200\n  },\n  menu: {\n    width: 1000\n  },\n  button: {\n    margin: theme.spacing(1)\n  }\n}));\n\nexport default function UserAdmin() {\n  const [adminMode, setAdminMode] = useState(false);\n  const { state, dispatch } = useContext(Store);\n  const classes = useStyles();\n  const switchOpenModeTransaction = async () => {\n    try {\n      dispatch({\n        type: \"LOADING\"\n      });\n      if (state.contract) {\n        const c = state.contract;\n        await c.methods.switchOpenMode(adminMode).send();\n        const _ethBalance = await state.web3.eth.getBalance(state.account);\n        dispatch({\n          type: \"SET_USER_ETHBALANCE\",\n          payload: _ethBalance.toString()\n        });\n      }\n    } finally {\n      dispatch({\n        type: \"LOADED\"\n      });\n    }\n  };\n  return (\n    <React.Fragment>\n      <Paper className={classes.container}>\n        <Typography variant=\"h5\" noWrap>\n          Administrator:\n        </Typography>\n        <Typography variant=\"h6\" noWrap>\n          Open Exchange?\n        </Typography>\n        <Grid container direction=\"row\" alignItems=\"center\" spacing={2}>\n          <Grid item>\n            <TextField\n              id=\"ExchangeOpenMode\"\n              select\n              label=\"Select\"\n              className={classes.textField}\n              value={adminMode}\n              SelectProps={{\n                MenuProps: {\n                  className: classes.menu\n                }\n              }}\n              margin=\"normal\"\n              variant=\"outlined\"\n              onChange={event => {\n                setAdminMode(event.target.value);\n              }}\n            >\n              {[\n                { key: \"false\", value: false },\n                { key: \"true\", value: true }\n              ].map(kvp => (\n                <MenuItem key={kvp.key} value={kvp.value}>\n                  {kvp.key}\n                </MenuItem>\n              ))}\n            </TextField>\n          </Grid>\n          <Grid item>\n            <Button\n              disabled={state.loading}\n              size=\"large\"\n              color=\"primary\"\n              variant=\"contained\"\n              className={classes.button}\n              onClick={switchOpenModeTransaction}\n            >\n              send\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n    </React.Fragment>\n  );\n}\n","import React, { useContext } from \"react\";\nimport UserCapabilities from \"./UserCapabilities\";\nimport UserAdmin from \"./UserAdmin\";\nimport { Store } from \"./Store\";\nexport default function User() {\n  const { state } = useContext(Store);\n\n  return (\n    <React.Fragment>\n      {state.contract && state.account && <UserCapabilities />}\n      {state.contract && state.account && state.userIsAdmin && <UserAdmin />}\n    </React.Fragment>\n  );\n}\n","import React, { useContext } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Store } from \"./Store\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3, 2),\n    width: \"auto\"\n  }\n}));\n\nexport default function About() {\n  const classes = useStyles();\n  const { state } = useContext(Store);\n  return (\n    <React.Fragment>\n      <Paper className={classes.root}>\n        <Typography variant=\"body2\" noWrap>\n          Exchange Address: {state.exchangeAddress}\n        </Typography>\n        {state.network === 3 && (\n          <Typography variant=\"body2\" noWrap>\n            Exchange Ropsten ENS Name: {state.ropstenENS}\n          </Typography>\n        )}\n        <Typography variant=\"body2\" noWrap>\n          Exchange Owner: {state.exchangeOwner}\n        </Typography>\n        <Typography variant=\"body2\" noWrap>\n          Exchange Token:{\" \"}\n          {state.exchangeToken ? state.exchangeToken.options.address : \"\"}\n        </Typography>\n        <Typography variant=\"body2\" noWrap>\n          Exchange Listed Companies Number: {state.exchangeNumberCompanies}\n        </Typography>\n      </Paper>\n    </React.Fragment>\n  );\n}\n","import PrivateCompany from \"./contracts/PrivateCompany.json\";\nimport { useContext, useEffect, useRef } from \"react\";\nimport { useSnackbar } from \"notistack\";\nimport { Store } from \"./Store\";\n\nexport default function EventManager() {\n  const { state, dispatch } = useContext(Store);\n  const { enqueueSnackbar } = useSnackbar();\n  let latestState = useRef(state);\n  useEffect(() => {\n    latestState.current = state;\n  }, [state]);\n  useEffect(() => {\n    const exchangeOpened = async () => {\n      enqueueSnackbar(\"Exchange Opened\", { variant: \"success\" });\n      dispatch({ type: \"SET_EXCHANGE_ISOPEN\", payload: true });\n    };\n    const exchangeClosed = async () => {\n      enqueueSnackbar(\"Exchange Closed\", { variant: \"error\" });\n      dispatch({ type: \"SET_EXCHANGE_ISOPEN\", payload: false });\n    };\n    const companyListed = async (owner, newCompany) => {\n      try {\n        enqueueSnackbar(\"New Company Listed\", {\n          variant: owner === latestState.current.account ? \"success\" : \"default\"\n        });\n        const _numberCompanies = await latestState.current.contract.methods\n          .numberOfListedCompanies()\n          .call();\n        dispatch({\n          type: \"SET_EXCHANGE_NUMBERCOMPANIES\",\n          payload: _numberCompanies\n        });\n        const companyContract = new latestState.current.web3.eth.Contract(\n          PrivateCompany.abi,\n          newCompany,\n          {\n            from: latestState.current.account\n          }\n        );\n        const companyName = await companyContract.methods.name().call();\n        const companySymbol = await companyContract.methods.symbol().call();\n        const companyOwner = owner;\n        const companyPrice = await latestState.current.contract.methods\n          .listedCompanyPrices(newCompany)\n          .call();\n        const exchangeAddress = latestState.current.exchangeAddress;\n        const companySharesForSales = await companyContract.methods\n          .allowance(companyOwner, exchangeAddress)\n          .call();\n        const companyTotalSupply = await companyContract.methods\n          .totalSupply()\n          .call();\n        const _ownedShares = await companyContract.methods\n          .balanceOf(state.contract.options.from)\n          .call();\n        dispatch({\n          type: \"ADD_EXCHANGE_COMPANY\",\n          payload: {\n            address: newCompany,\n            descr: {\n              name: companyName,\n              symbol: companySymbol,\n              owner: companyOwner,\n              sharesForSale: companySharesForSales,\n              pricePerShare: companyPrice,\n              totalSupply: companyTotalSupply,\n              ownedShares: _ownedShares,\n              contract: companyContract\n            }\n          }\n        });\n        owner === latestState.current.account &&\n          dispatch({\n            type: \"ADD_USER_OWNEDCOMPANY\",\n            payload: newCompany\n          });\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    if (latestState.current.contract) {\n      latestState.current.contract.events\n        .allEvents()\n        .on(\"data\", event => {\n          switch (event.event) {\n            case \"ExchangeOpened\":\n              return exchangeOpened();\n            case \"ExchangeClosed\":\n              return exchangeClosed();\n            case \"CompanyListed\":\n              return companyListed(\n                event.returnValues.owner,\n                event.returnValues.company\n              );\n            default:\n              return null;\n          }\n        })\n        .on(\"error\", console.error);\n    }\n  }, [state.contract, dispatch, enqueueSnackbar]);\n  useEffect(() => {\n    const userBalanceUpdated = async () => {\n      const _oldBalance = Object.assign(latestState.current.userBalance);\n      const _balance = await latestState.current.contract.methods\n        .exchangeTokenBalance()\n        .call();\n      const _oldBalanceDisplay = latestState.current.web3.utils.fromWei(\n        _oldBalance.toString()\n      );\n      const _newBalanceDisplay = latestState.current.web3.utils.fromWei(\n        _balance\n      );\n      dispatch({ type: \"SET_USER_BALANCE\", payload: _balance });\n      enqueueSnackbar(\n        `Updated user balance from ${_oldBalanceDisplay} to ${_newBalanceDisplay}`,\n        { variant: \"success\" }\n      );\n    };\n    const userAllowanceUpdated = async () => {\n      const _oldAllowance = Object.assign(latestState.current.userStaked);\n      const _allowance = await latestState.current.contract.methods\n        .exchangeTokenStaked()\n        .call();\n      const _oldDisplay = latestState.current.web3.utils.fromWei(\n        _oldAllowance.toString()\n      );\n      const _newDisplay = latestState.current.web3.utils.fromWei(_allowance);\n      dispatch({ type: \"SET_USER_STAKED\", payload: _allowance });\n      enqueueSnackbar(\n        `Updated user staked from ${_oldDisplay} to ${_newDisplay}`,\n        { variant: \"success\" }\n      );\n    };\n    if (latestState.current.exchangeToken) {\n      latestState.current.exchangeToken.events\n        .allEvents()\n        .on(\"data\", event => {\n          switch (event.event) {\n            case \"Transfer\":\n              if (\n                event.returnValues.from === latestState.current.account ||\n                event.returnValues.to === latestState.current.account\n              ) {\n                userBalanceUpdated();\n              }\n              break;\n            case \"Approval\":\n              if (event.returnValues.owner === latestState.current.account) {\n                userAllowanceUpdated();\n              }\n              break;\n            default:\n              break;\n          }\n        })\n        .on(\"error\", console.error);\n    }\n  }, [state.exchangeToken, dispatch, enqueueSnackbar]);\n  return null;\n}\n","import React from \"react\";\nimport Home from \"./Home\";\nimport { StoreProvider } from \"./Store\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport NavBar from \"./NavBar\";\nimport User from \"./User\";\nimport About from \"./About\";\nimport EventManager from \"./EventManager\";\nimport {\n  createMuiTheme,\n  responsiveFontSizes,\n  ThemeProvider\n} from \"@material-ui/core/styles\";\nimport indigo from \"@material-ui/core/colors/indigo\";\nimport teal from \"@material-ui/core/colors/teal\";\n\nimport { SnackbarProvider } from \"notistack\";\n\nlet theme = createMuiTheme({\n  palette: {\n    primary: indigo,\n    secondary: teal,\n    type: \"dark\"\n  }\n});\ntheme = responsiveFontSizes(theme);\n\nexport default function App() {\n  return (\n    <React.Fragment>\n      <StoreProvider>\n        <ThemeProvider theme={theme}>\n          <CssBaseline />\n          <SnackbarProvider maxSnack={3}>\n            <Router>\n              <NavBar />\n              {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n              <Switch>\n                <Route path=\"/About\">\n                  <About />\n                </Route>\n                <Route path=\"/User\">\n                  <User />\n                </Route>\n                <Route path=\"/\">\n                  <Home />\n                </Route>\n              </Switch>\n            </Router>\n            <EventManager />\n          </SnackbarProvider>\n        </ThemeProvider>\n      </StoreProvider>\n    </React.Fragment>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}