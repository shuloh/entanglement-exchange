{"version":3,"sources":["../node_modules/web3-eth-accounts/src sync","Store.js","ListedCompanyCard.js","ListedCompaniesGrid.js","Home.js","utils/getWeb3.js","NavDrawer.js","NavBar.js","User.js","About.js","EventManager.js","App.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","Store","React","createContext","initialState","sideBarOpen","adminPanelOpen","web3","network","account","contract","userIsAdmin","userBalance","userNumberCompanies","userOwnedCompanies","exchangeAddress","exchangeIsOpen","exchangeOwner","exchangeToken","exchangeNumberCompanies","exchangeCompanies","transactAdminOpenMode","transactNewCompanyName","transactNewCompanySymbol","transactNewCompanyPrice","transactBuyEE","reducer","state","action","type","payload","companyAddress","value","address","descr","subtype","StoreProvider","props","useReducer","dispatch","Provider","children","useStyles","makeStyles","theme","card","maxWidth","background","palette","secondary","dark","bullet","display","margin","transform","title","fontSize","pos","marginBottom","ListedCompanyCard","classes","useContext","Card","className","CardContent","Typography","variant","symbol","color","name","noWrap","pricePerShare","sharesForSale","CardActions","root","flexGrow","paper","height","width","ListedCompaniesGrid","Fragment","Grid","container","direction","justify","alignItems","spacing","Object","map","index","key","item","padding","Home","useEffect","a","methods","numberOfListedCompanies","call","from","nCompanies","i","listedCompanies","cAddress","companyContract","eth","Contract","IPrivateCompany","abi","companyName","companySymbol","fetchCompanies","Paper","getWeb3","window","ethereum","autoRefreshOnNetworkChange","Web3","enable","console","log","provider","providers","HttpProvider","list","menuButton","marginRight","TemporaryDrawer","toggleDrawer","side","open","event","IconButton","edge","aria-label","onClick","Drawer","onClose","role","onKeyDown","List","ListItem","button","component","Link","to","ListItemIcon","ListItemText","primary","Divider","main","NavBar","connectWeb3","getAccounts","accounts","net","getId","networkId","deployedProxy","PrivateExchangeProxy","networks","instance","PrivateExchangeLogic","exchangeDetails","userDetails","c","isOwner","_isAdmin","exchangeTokenBalance","_balance","toString","numberOfOwnedCompanies","_numberCompanies","ownerCompanies","ownedCompany","options","isOpen","_isOpen","owner","_owner","_token","_tokenContract","PrivateCompany","listedCompanyAddress","companyOwner","listedCompanyPrices","companyPrice","allowance","companySharesForSales","AppBar","position","Toolbar","Switch","checked","disabled","onChange","textField","marginLeft","dense","marginTop","menu","User","Box","switchOpenModeTransaction","switchOpenMode","send","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","zeroMinWidth","TextField","select","label","SelectProps","MenuProps","target","kvp","MenuItem","Button","size","handleNewCompany","utils","fromWei","step","InputLabelProps","shrink","createCompanyAndList","f","inputProps","min","buyExchangeToken","toWei","About","EventManager","enqueueSnackbar","useSnackbar","events","allEvents","on","exchangeOpened","exchangeClosed","error","createMuiTheme","indigo","teal","responsiveFontSizes","Boolean","location","hostname","match","ReactDOM","render","ThemeProvider","CssBaseline","Container","maxSnack","path","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.853072df.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 416;","import React from \"react\";\n\nexport const Store = React.createContext();\n\nconst initialState = {\n  sideBarOpen: false,\n  adminPanelOpen: false,\n\n  web3: null,\n  network: null,\n  account: null,\n  contract: null,\n\n  userIsAdmin: false,\n  userBalance: \"0\",\n  userNumberCompanies: 0,\n  userOwnedCompanies: {},\n\n  exchangeAddress: false,\n  exchangeIsOpen: false,\n  exchangeOwner: \"\",\n  exchangeToken: null,\n  exchangeNumberCompanies: 0,\n  exchangeCompanies: {},\n\n  transactAdminOpenMode: true,\n  transactNewCompanyName: \"\",\n  transactNewCompanySymbol: \"\",\n  transactNewCompanyPrice: 1,\n  transactBuyEE: 0.01\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"SIDE_DRAWER\":\n      return { ...state, sideBarOpen: action.payload };\n    case \"ADMINPANEL_OPEN\":\n      return { ...state, adminPanelOpen: action.payload };\n    case \"SET_WEB3\":\n      return { ...state, web3: action.payload };\n    case \"SET_NETWORK\":\n      return { ...state, network: action.payload };\n    case \"SET_ACCOUNT\":\n      return { ...state, account: action.payload };\n    case \"SET_CONTRACT\":\n      return { ...state, contract: action.payload };\n    case \"SET_USER_ISADMIN\":\n      return { ...state, userIsAdmin: action.payload };\n    case \"SET_USER_BALANCE\":\n      return { ...state, userBalance: action.payload };\n    case \"SET_USER_NUMBERCOMPANIES\":\n      return { ...state, userNumberCompanies: action.payload };\n    case \"ADD_USER_OWNEDCOMPANY\":\n      return {\n        ...state,\n        userOwnedCompanies: {\n          ...state.exchangeCompanies,\n          [action.payload.companyAddress]: action.payload.value\n        }\n      };\n    case \"SET_EXCHANGE_ADDRESS\":\n      return { ...state, exchangeAddress: action.payload };\n    case \"SET_EXCHANGE_ISOPEN\":\n      return { ...state, exchangeIsOpen: action.payload };\n    case \"SET_EXCHANGE_OWNER\":\n      return { ...state, exchangeOwner: action.payload };\n    case \"SET_EXCHANGE_TOKEN\":\n      return { ...state, exchangeToken: action.payload };\n    case \"SET_EXCHANGE_NUMBERCOMPANIES\":\n      return { ...state, exchangeNumberCompanies: action.payload };\n    case \"ADD_EXCHANGE_COMPANY\":\n      return {\n        ...state,\n        exchangeCompanies: {\n          ...state.exchangeCompanies,\n          [action.payload.address]: action.payload.descr\n        }\n      };\n\n    case \"SET_ADMIN_OPENMODE\":\n      return { ...state, transactAdminOpenMode: action.payload };\n    case \"SET_USER_NEWCOMPANY\":\n      switch (action.subtype) {\n        case \"name\":\n          return { ...state, transactNewCompanyName: action.payload };\n        case \"symbol\":\n          return { ...state, transactNewCompanySymbol: action.payload };\n        case \"price\":\n          return { ...state, transactNewCompanyPrice: action.payload };\n        default:\n          return state;\n      }\n    case \"CLEAR_USER_NEWCOMPANY\":\n      return {\n        ...state,\n        transactNewCompanyName: \"\",\n        transactNewCompanySymbol: \"\",\n        transactNewCompanyPrice: 1\n      };\n    case \"SET_USER_BUYEE\":\n      return { ...state, transactBuyEE: action.payload };\n    default:\n      return state;\n  }\n}\n\nexport function StoreProvider(props) {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n  const value = { state, dispatch };\n  return <Store.Provider value={value}>{props.children}</Store.Provider>;\n}\n","import React, { useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Store } from \"./Store\";\nconst useStyles = makeStyles(theme => ({\n  card: {\n    maxWidth: 275,\n    background: theme.palette.secondary.dark\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\"\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 12\n  }\n}));\n\nexport default function ListedCompanyCard(props) {\n  const classes = useStyles();\n  const { state } = useContext(Store);\n\n  return (\n    <Card className={classes.card}>\n      <CardContent>\n        <Typography variant=\"h5\">\n          {state.exchangeCompanies[props.address].symbol}\n        </Typography>\n        <Typography variant=\"h6\" className={classes.pos} color=\"textSecondary\">\n          {state.exchangeCompanies[props.address].name}\n        </Typography>\n        <Typography variant=\"body2\" noWrap>\n          Address: {props.address}\n          {<br />}\n          Price/Share: {state.exchangeCompanies[props.address].pricePerShare}\n          {<br />}\n          Shares for Sale:{\" \"}\n          {state.exchangeCompanies[props.address].sharesForSale}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        {/* <Button size=\"small\">Learn More</Button> */}\n      </CardActions>\n    </Card>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ListedCompanyCard from \"./ListedCompanyCard\";\n\nimport { Store } from \"./Store\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    height: 140,\n    width: 100\n  }\n}));\n\nexport default function ListedCompaniesGrid() {\n  const classes = useStyles();\n  const { state } = useContext(Store);\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        className={classes.root}\n        direction=\"row\"\n        justify=\"flex-start\"\n        alignItems=\"flex-start\"\n        spacing={2}\n      >\n        {Object.keys(state.exchangeCompanies).map((value, index) => (\n          <Grid key={index} item>\n            <ListedCompanyCard className={classes.paper} address={value} />\n          </Grid>\n        ))}\n      </Grid>\n    </React.Fragment>\n  );\n}\n","import React, { useContext, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IPrivateCompany from \"./contracts/IPrivateCompany.json\";\n\nimport { Store } from \"./Store\";\nimport ListedCompaniesGrid from \"./ListedCompaniesGrid\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3, 2, 2, 2)\n  }\n}));\nexport default function Home() {\n  const classes = useStyles();\n  const { state, dispatch } = useContext(Store);\n\n  useEffect(() => {\n    async function fetchCompanies() {\n      if (state.contract) {\n        const nCompanies = await state.contract.methods\n          .numberOfListedCompanies()\n          .call({ from: state.account });\n        for (let i = 0; i < nCompanies; i++) {\n          const cAddress = await state.contract.methods\n            .listedCompanies(i)\n            .call({ from: state.account });\n          if (state.exchangeCompanies[cAddress]) {\n            continue;\n          } else {\n            const companyContract = new state.web3.eth.Contract(\n              IPrivateCompany.abi,\n              cAddress\n            );\n            const companyName = await companyContract.methods\n              .name()\n              .call({ from: state.account });\n            const companySymbol = await companyContract.methods\n              .symbol()\n              .call({ from: state.account });\n            dispatch({\n              type: \"ADD_EXCHANGELISTEDCOMPANY\",\n              payload: {\n                key: cAddress,\n                value: {\n                  name: companyName,\n                  symbol: companySymbol,\n                  contract: companyContract\n                }\n              }\n            });\n          }\n        }\n      }\n    }\n    fetchCompanies();\n  });\n  return (\n    <React.Fragment>\n      <Paper className={classes.root}>\n        <Typography variant=\"h6\">Listed Companies</Typography>\n        <ListedCompaniesGrid />\n      </Paper>\n    </React.Fragment>\n  );\n}\n","import Web3 from \"web3\";\n\nconst getWeb3 = async () => {\n  // Wait for loading completion to avoid race conditions with web3 injection timing.\n  // Modern dapp browsers...\n  if (window.ethereum) {\n    window.ethereum.autoRefreshOnNetworkChange = false;\n    const web3 = new Web3(window.ethereum);\n    // Request account access if needed\n    await window.ethereum.enable();\n    // Acccounts now exposed\n    return web3;\n  }\n  // Legacy dapp browsers...\n  else if (window.web3) {\n    // Use Mist/MetaMask's provider.\n    const web3 = window.web3;\n    console.log(\"Injected web3 detected.\");\n    return web3;\n  }\n  // Fallback to localhost; use dev console port by default...\n  else {\n    const provider = new Web3.providers.HttpProvider(\"http://127.0.0.1:8545\");\n    const web3 = new Web3(provider);\n    console.log(\"No web3 instance injected, using Local web3.\");\n    return web3;\n  }\n};\n\nexport default getWeb3;\n","import React, { useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport AppsIcon from \"@material-ui/icons/Apps\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport PersonIcon from \"@material-ui/icons/Person\";\n\nimport { Link } from \"react-router-dom\";\nimport { Store } from \"./Store\";\n\nconst useStyles = makeStyles(theme => ({\n  list: {\n    width: 250\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  }\n}));\n\nexport default function TemporaryDrawer() {\n  const classes = useStyles();\n  const { state, dispatch } = useContext(Store);\n\n  const toggleDrawer = (side, open) => event => {\n    if (\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n    dispatch({\n      type: \"SIDE_DRAWER\",\n      payload: open\n    });\n  };\n  const sideList = side => (\n    <div\n      className={classes.list}\n      role=\"presentation\"\n      onClick={toggleDrawer(side, false)}\n      onKeyDown={toggleDrawer(side, false)}\n    >\n      <List>\n        <ListItem button key={\"Home\"} component={Link} to=\"/\">\n          <ListItemIcon>\n            <AppsIcon />\n          </ListItemIcon>\n          <ListItemText primary={\"Home\"} />\n        </ListItem>\n\n        <ListItem button key={\"About\"} component={Link} to=\"About\">\n          <ListItemIcon>\n            <InfoIcon />\n          </ListItemIcon>\n          <ListItemText primary={\"About\"} />\n        </ListItem>\n\n        <ListItem button key={\"User\"} component={Link} to=\"User\">\n          <ListItemIcon>\n            <PersonIcon />\n          </ListItemIcon>\n          <ListItemText primary={\"User\"} />\n        </ListItem>\n      </List>\n      <Divider />\n    </div>\n  );\n\n  return (\n    <div>\n      <IconButton\n        edge=\"start\"\n        className={classes.menuButton}\n        color=\"inherit\"\n        aria-label=\"menu\"\n        onClick={toggleDrawer(\"left\", true)}\n      >\n        <MenuIcon />\n      </IconButton>\n      <Drawer open={state.sideBarOpen} onClose={toggleDrawer(\"left\", false)}>\n        {sideList(\"left\")}\n      </Drawer>\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Switch from \"@material-ui/core/Switch\";\nimport getWeb3 from \"./utils/getWeb3\";\nimport TemporaryDrawer from \"./NavDrawer\";\nimport PrivateExchangeProxy from \"./contracts/PrivateExchangeProxy.json\";\nimport PrivateExchangeLogic from \"./contracts/PrivateExchangeLogic.json\";\nimport PrivateCompany from \"./contracts/PrivateCompany.json\";\n\nimport { Store } from \"./Store\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    background: theme.palette.primary.main\n  },\n  title: {\n    flexGrow: 1\n  }\n}));\n\nexport default function NavBar() {\n  const classes = useStyles();\n  const { state, dispatch } = useContext(Store);\n  const connectWeb3 = async () => {\n    try {\n      //store web3 for contract interaction in whole app\n      const web3 = await getWeb3();\n      dispatch({\n        type: \"SET_WEB3\",\n        payload: web3\n      });\n\n      //store account for contract interaction in whole app\n      const accounts = await web3.eth.getAccounts();\n      dispatch({\n        type: \"SET_ACCOUNT\",\n        payload: accounts[0]\n      });\n\n      //store networkId for contract interaction in whole app\n      const networkId = await web3.eth.net.getId();\n      dispatch({\n        type: \"SET_NETWORK\",\n        payload: networkId\n      });\n      //store contract\n      const deployedProxy = PrivateExchangeProxy.networks[networkId];\n      const instance = new web3.eth.Contract(\n        PrivateExchangeLogic.abi,\n        deployedProxy.address,\n        {\n          from: accounts[0]\n        }\n      );\n      dispatch({\n        type: \"SET_CONTRACT\",\n        payload: instance\n      });\n      await exchangeDetails(web3, instance, accounts[0]);\n      await userDetails(instance, accounts[0]);\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      console.log(error);\n    }\n  };\n  const userDetails = async (c, account) => {\n    const _isAdmin = await c.methods.isOwner().call();\n    dispatch({ type: \"SET_USER_ISADMIN\", payload: _isAdmin });\n    const _balance = await c.methods.exchangeTokenBalance().call();\n    dispatch({ type: \"SET_USER_BALANCE\", payload: _balance.toString() });\n    const _numberCompanies = await c.methods.numberOfOwnedCompanies().call();\n    dispatch({ type: \"SET_USER_NUMBERCOMPANIES\", payload: _numberCompanies });\n    for (let i = 0; i < _numberCompanies; i++) {\n      const ownedCompany = await c.methods.ownerCompanies(account, i).call();\n      dispatch({ type: \"ADD_USER_OWNEDCOMPANIES\", payload: ownedCompany });\n    }\n  };\n  const exchangeDetails = async (web3, c, account) => {\n    dispatch({\n      type: \"SET_EXCHANGE_ADDRESS\",\n      payload: c.options.address\n    });\n    const _isOpen = await c.methods.isOpen().call();\n    dispatch({ type: \"SET_EXCHANGE_ISOPEN\", payload: _isOpen });\n    const _owner = await c.methods.owner().call();\n    dispatch({ type: \"SET_EXCHANGE_OWNER\", payload: _owner });\n    const _token = await c.methods.exchangeToken().call();\n    const _tokenContract = new web3.eth.Contract(PrivateCompany.abi, _token, {\n      from: account\n    });\n    dispatch({\n      type: \"SET_EXCHANGE_TOKEN\",\n      payload: _tokenContract\n    });\n    const _numberCompanies = await c.methods.numberOfListedCompanies().call();\n    dispatch({ type: \"SET_EXCHANGE_NUMBERCOMPANIES\", payload: _token });\n    for (let i = 0; i < _numberCompanies; i++) {\n      const listedCompanyAddress = await c.methods.listedCompanies(i).call();\n      const companyContract = new web3.eth.Contract(\n        PrivateCompany.abi,\n        listedCompanyAddress,\n        {\n          from: account\n        }\n      );\n      const companyName = await companyContract.methods.name().call();\n      const companySymbol = await companyContract.methods.symbol().call();\n      const companyOwner = await companyContract.methods.owner().call();\n      const companyPrice = await c.methods\n        .listedCompanyPrices(companyContract.options.address)\n        .call();\n      const companySharesForSales = await companyContract.methods\n        .allowance(companyOwner, c.options.address)\n        .call();\n      console.log(companyName, companySymbol, companyOwner, companyPrice);\n      dispatch({\n        type: \"ADD_EXCHANGE_COMPANY\",\n        payload: {\n          address: listedCompanyAddress,\n          descr: {\n            name: companyName,\n            symbol: companySymbol,\n            owner: companyOwner,\n            sharesForSale: companySharesForSales,\n            pricePerShare: companyPrice,\n            contract: companyContract\n          }\n        }\n      });\n    }\n  };\n  return (\n    <React.Fragment>\n      <AppBar position=\"static\" className={classes.root}>\n        <Toolbar>\n          <TemporaryDrawer />\n          <Typography variant=\"h6\" className={classes.title} noWrap>\n            Entanglement-Exchange\n          </Typography>\n          <Switch\n            color=\"primary\"\n            checked={state.account !== null}\n            disabled={state.account !== null}\n            onChange={connectWeb3}\n            aria-label=\"Connect\"\n          />\n          <Typography variant=\"body2\" noWrap>\n            {state.account ? state.account : \"Connect Web3\"}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </React.Fragment>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport Box from \"@material-ui/core/Box\";\n\nimport { Store } from \"./Store\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    padding: theme.spacing(1, 0, 0, 0)\n  },\n  container: {\n    padding: theme.spacing(2, 3, 2, 3)\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200\n  },\n  dense: {\n    marginTop: 19\n  },\n  menu: {\n    width: 200\n  },\n  button: {\n    margin: theme.spacing(1)\n  }\n}));\n\nexport default function User() {\n  const classes = useStyles();\n  const { state } = useContext(Store);\n\n  const AdminCapabilities = () => {\n    const { state, dispatch } = useContext(Store);\n    const switchOpenMode = event => {\n      dispatch({ type: \"SET_ADMIN_OPENMODE\", payload: event.target.value });\n    };\n    const switchOpenModeTransaction = async () => {\n      const c = state.contract;\n      await c.methods.switchOpenMode(state.transactAdminOpenMode).send();\n    };\n    return (\n      <React.Fragment>\n        <ExpansionPanel>\n          <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"admin-capabilities\"\n            id=\"admin-capabilities\"\n          >\n            <Typography variant=\"h6\">\n              You are the administrator of this exchange.\n            </Typography>\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails>\n            <Box>\n              <Typography variant=\"h6\" noWrap>\n                Open Exchange?\n              </Typography>\n              <Grid container direction=\"row\" alignItems=\"center\" spacing={2}>\n                <Grid item zeroMinWidth>\n                  <TextField\n                    id=\"ExchangeOpenMode\"\n                    select\n                    label=\"Select\"\n                    className={classes.textField}\n                    value={state.transactAdminOpenMode}\n                    SelectProps={{\n                      MenuProps: {\n                        className: classes.menu\n                      }\n                    }}\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    onChange={switchOpenMode}\n                  >\n                    {[\n                      { key: \"false\", value: false },\n                      { key: \"true\", value: true }\n                    ].map(kvp => (\n                      <MenuItem key={kvp.key} value={kvp.value}>\n                        {kvp.key}\n                      </MenuItem>\n                    ))}\n                  </TextField>\n                </Grid>\n                <Grid item zeroMinWidth>\n                  <Button\n                    size=\"medium\"\n                    color=\"primary\"\n                    variant=\"contained\"\n                    className={classes.button}\n                    onClick={switchOpenModeTransaction}\n                  >\n                    send\n                  </Button>\n                </Grid>\n              </Grid>\n            </Box>\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n      </React.Fragment>\n    );\n  };\n  const UserCapabilities = () => {\n    const { state, dispatch } = useContext(Store);\n    const handleNewCompany = name => event => {\n      dispatch({\n        type: \"SET_USER_NEWCOMPANY\",\n        subtype: name,\n        payload: event.target.value\n      });\n    };\n    const handleBuyEE = name => event => {\n      dispatch({ type: \"SET_USER_BUYEE\", payload: event.target.value });\n    };\n    const createNewCompanyAndListTransaction = () => {\n      const f = async () => {\n        if (state.contract) {\n          const c = state.contract;\n          await c.methods\n            .createCompanyAndList(\n              state.transactNewCompanyName,\n              state.transactNewCompanySymbol,\n              state.transactNewCompanyPrice\n            )\n            .send();\n          dispatch({ type: \"CLEAR_USER_NEWCOMPANY\" });\n        }\n      };\n      f();\n    };\n    const buyExchangeTokenTransaction = () => {\n      const f = async () => {\n        if (state.contract) {\n          const c = state.contract;\n          await c.methods.buyExchangeToken().send({\n            value: state.web3.utils.toWei(state.transactBuyEE.toString())\n          });\n        }\n      };\n      f();\n    };\n    return (\n      <React.Fragment>\n        <Paper className={classes.container}>\n          <Typography variant=\"h5\" noWrap>\n            Account Details:\n          </Typography>\n          <Typography variant=\"h6\" noWrap>\n            Balance:\n            {state.userBalance\n              ? state.web3.utils.fromWei(state.userBalance)\n              : \"-\"}\n            EE$\n          </Typography>\n        </Paper>\n        <Paper className={classes.container}>\n          <Typography variant=\"h6\" noWrap>\n            Create Company and List on Exchange\n          </Typography>\n          <Grid container direction=\"row\" alignItems=\"center\" spacing={2}>\n            <Grid item zeroMinWidth>\n              <TextField\n                id=\"CompanyName\"\n                label=\"Company Name\"\n                className={classes.textField}\n                value={state.transactNewCompanyName}\n                onChange={handleNewCompany(\"name\")}\n                margin=\"normal\"\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item zeroMinWidth>\n              <TextField\n                id=\"CompanySymbol\"\n                label=\"Company Symbol\"\n                className={classes.textField}\n                value={state.transactNewCompanySymbol}\n                onChange={handleNewCompany(\"symbol\")}\n                margin=\"normal\"\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item zeroMinWidth>\n              <TextField\n                id=\"PricePerShare\"\n                label=\"Price per Share (EE$)\"\n                value={state.transactNewCompanyPrice}\n                onChange={handleNewCompany(\"price\")}\n                type=\"number\"\n                step=\"0.01\"\n                className={classes.textField}\n                InputLabelProps={{\n                  shrink: true\n                }}\n                margin=\"normal\"\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item zeroMinWidth>\n              <Button\n                color=\"primary\"\n                size=\"large\"\n                variant=\"contained\"\n                className={classes.button}\n                onClick={createNewCompanyAndListTransaction}\n              >\n                send\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n\n        <Paper className={classes.container}>\n          <Typography variant=\"h6\" noWrap>\n            Buy Exchange Tokens (EE$)\n          </Typography>\n          <Grid container direction=\"row\" alignItems=\"center\" spacing={2}>\n            <Grid item zeroMinWidth>\n              <TextField\n                id=\"AmountofEE\"\n                label=\"AmountOfEE\"\n                value={state.transactBuyEE}\n                onChange={handleBuyEE()}\n                type=\"number\"\n                inputProps={{ step: \"0.01\", min: \"0.01\" }}\n                className={classes.textField}\n                InputLabelProps={{\n                  shrink: true\n                }}\n                margin=\"normal\"\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item zeroMinWidth>\n              <Button\n                color=\"primary\"\n                size=\"large\"\n                variant=\"contained\"\n                className={classes.button}\n                onClick={buyExchangeTokenTransaction}\n              >\n                send\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n      </React.Fragment>\n    );\n  };\n  return (\n    <React.Fragment>\n      <Box className={classes.root}>\n        {state.userIsAdmin && <AdminCapabilities />}\n        {state.contract && <UserCapabilities />}\n      </Box>\n    </React.Fragment>\n  );\n}\n","import React, { useContext } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Store } from \"./Store\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3, 2),\n    width: \"auto\"\n  }\n}));\n\nexport default function About() {\n  const classes = useStyles();\n  const { state } = useContext(Store);\n  return (\n    <React.Fragment>\n      <Paper className={classes.root}>\n        <Typography variant=\"body2\" noWrap>\n          Exchange Contract Address: {state.exchangeAddress}\n        </Typography>\n        <Typography variant=\"body2\" noWrap>\n          Exchange Status: {state.exchangeIsOpen ? \"Open\" : \"Closed\"}\n        </Typography>\n        <Typography variant=\"body2\" noWrap>\n          Exchange Owner: {state.exchangeOwner}\n        </Typography>\n        <Typography variant=\"body2\" noWrap>\n          Exchange Token:{\" \"}\n          {state.exchangeToken ? state.exchangeToken.options.address : \"\"}\n        </Typography>\n        <Typography variant=\"body2\" noWrap>\n          Exchange Listed Companies Number: {state.exchangeNumberCompanies}\n        </Typography>\n      </Paper>\n    </React.Fragment>\n  );\n}\n","import { useContext, useEffect, useRef } from \"react\";\nimport { useSnackbar } from \"notistack\";\n\nimport { Store } from \"./Store\";\nexport default function EventManager() {\n  const { state, dispatch } = useContext(Store);\n  const { enqueueSnackbar } = useSnackbar();\n  useEffect(() => {\n    if (state.contract) {\n      state.contract.events\n        .allEvents()\n        .on(\"data\", event => {\n          switch (event.event) {\n            case \"ExchangeOpened\":\n              exchangeOpened();\n              break;\n            case \"ExchangeClosed\":\n              exchangeClosed();\n              break;\n            default:\n              return null;\n          }\n        })\n        .on(\"error\", console.error);\n    }\n  }, [state.contract]);\n  useEffect(() => {\n    if (state.exchangeToken) {\n      state.exchangeToken.events\n        .allEvents()\n        .on(\"data\", event => {})\n        .on(\"error\", console.error);\n    }\n  }, [state.exchangeToken]);\n  const exchangeOpened = async () => {\n    console.log(\"OPEN\");\n    enqueueSnackbar(\"EXCHANGE OPENED\", {});\n    dispatch({ type: \"SET_EXCHANGE_ISOPEN\", payload: true });\n  };\n  const exchangeClosed = async () => {\n    enqueueSnackbar(\"EXCHANGE CLOSED\", {});\n    dispatch({ type: \"SET_EXCHANGE_ISOPEN\", payload: false });\n  };\n  const userBalanceUpdated = async () => {};\n  return null;\n}\n","import React from \"react\";\nimport Home from \"./Home\";\nimport { StoreProvider } from \"./Store\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { CssBaseline, Container } from \"@material-ui/core\";\nimport NavBar from \"./NavBar\";\nimport User from \"./User\";\nimport About from \"./About\";\nimport EventManager from \"./EventManager\";\nimport {\n  createMuiTheme,\n  responsiveFontSizes,\n  ThemeProvider\n} from \"@material-ui/core/styles\";\nimport indigo from \"@material-ui/core/colors/indigo\";\nimport teal from \"@material-ui/core/colors/teal\";\n\nimport { SnackbarProvider } from \"notistack\";\n\nlet theme = createMuiTheme({\n  palette: {\n    primary: indigo,\n    secondary: teal,\n    type: \"dark\"\n  }\n});\ntheme = responsiveFontSizes(theme);\n\nexport default function App() {\n  return (\n    <React.Fragment>\n      <StoreProvider>\n        <ThemeProvider theme={theme}>\n          <CssBaseline />\n          <Container>\n            <SnackbarProvider maxSnack={3}>\n              <Router>\n                <NavBar />\n                {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n                <Switch>\n                  <Route path=\"/About\">\n                    <About />\n                  </Route>\n                  <Route path=\"/User\">\n                    <User />\n                  </Route>\n                  <Route path=\"/\">\n                    <Home />\n                  </Route>\n                </Switch>\n              </Router>\n              <EventManager />\n            </SnackbarProvider>\n          </Container>\n        </ThemeProvider>\n      </StoreProvider>\n    </React.Fragment>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}